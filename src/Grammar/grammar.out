State 0:
          main ::= * in
      (1) in ::= *
          in ::= * in NEWLINE
          in ::= * in start NEWLINE
          in ::= * error
          error ::= * OPENQUOTEERROR

                OPENQUOTEERROR shift  103
                         error shift  104
                          main accept
                            in shift  1
                     {default} reduce 1

State 1:
      (0) main ::= in *
          in ::= in * NEWLINE
          in ::= in * start NEWLINE
          start ::= * spec
          spec ::= * closed_block
          open_block ::= * OPENING_LPAREN spec
          open_block ::= * open_block NEWLINE spec
          closed_block ::= * open_block CLOSING_RPAREN
          spec ::= * assignment
          spec ::= * top_stmt
          top_stmt ::= * stmt
          stmt ::= * expr
          name_chain ::= * name_chain NAME
          name_chain ::= * NAME
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          spec ::= * case_statement
          spec ::= * guard_statement
          spec ::= * final_guard_statement
          spec ::= * where_statement
          guard_statement ::= * name_chain GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * name_chain GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          where_statement ::= * guard_statement WHERE
          where_statement ::= * final_guard_statement WHERE
          where_statement ::= * name_chain ASSIGN expr WHERE
          where_statement ::= * where_statement NAME ASSIGN expr
          case_statement ::= * name_chain ASSIGN CASE expr OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * LET NAME ASSIGN expr IN expr
          assignment ::= * name_chain ASSIGN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                             $ reduce 0
                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                       NEWLINE shift  132
                OPENING_LPAREN shift  3
                          NAME shift  79
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  65
                         start shift  102
                          spec shift  130
                  closed_block shift  129
                    open_block shift  84
                    assignment shift  126
                      top_stmt shift  125
                          stmt shift  124
                    name_chain shift  80
                 function_call shift  123
                case_statement shift  83
               guard_statement shift  78
         final_guard_statement shift  87
               where_statement shift  86
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 2:
          spec ::= * closed_block
          open_block ::= * OPENING_LPAREN spec
          open_block ::= * open_block NEWLINE spec
          open_block ::= open_block NEWLINE * spec
          closed_block ::= * open_block CLOSING_RPAREN
          spec ::= * assignment
          spec ::= * top_stmt
          top_stmt ::= * stmt
          stmt ::= * expr
          name_chain ::= * name_chain NAME
          name_chain ::= * NAME
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          spec ::= * case_statement
          spec ::= * guard_statement
          spec ::= * final_guard_statement
          spec ::= * where_statement
          guard_statement ::= * name_chain GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * name_chain GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          where_statement ::= * guard_statement WHERE
          where_statement ::= * final_guard_statement WHERE
          where_statement ::= * name_chain ASSIGN expr WHERE
          where_statement ::= * where_statement NAME ASSIGN expr
          case_statement ::= * name_chain ASSIGN CASE expr OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * LET NAME ASSIGN expr IN expr
          assignment ::= * name_chain ASSIGN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                OPENING_LPAREN shift  3
                          NAME shift  79
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  65
                          spec shift  127
                  closed_block shift  129
                    open_block shift  84
                    assignment shift  126
                      top_stmt shift  125
                          stmt shift  124
                    name_chain shift  80
                 function_call shift  123
                case_statement shift  83
               guard_statement shift  78
         final_guard_statement shift  87
               where_statement shift  86
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 3:
          spec ::= * closed_block
          open_block ::= * OPENING_LPAREN spec
          open_block ::= OPENING_LPAREN * spec
          open_block ::= * open_block NEWLINE spec
          closed_block ::= * open_block CLOSING_RPAREN
          spec ::= * assignment
          spec ::= * top_stmt
          top_stmt ::= * stmt
          stmt ::= * expr
          name_chain ::= * name_chain NAME
          name_chain ::= * NAME
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          spec ::= * case_statement
          spec ::= * guard_statement
          spec ::= * final_guard_statement
          spec ::= * where_statement
          guard_statement ::= * name_chain GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * name_chain GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          where_statement ::= * guard_statement WHERE
          where_statement ::= * final_guard_statement WHERE
          where_statement ::= * name_chain ASSIGN expr WHERE
          where_statement ::= * where_statement NAME ASSIGN expr
          case_statement ::= * name_chain ASSIGN CASE expr OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * LET NAME ASSIGN expr IN expr
          assignment ::= * name_chain ASSIGN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                OPENING_LPAREN shift  3
                          NAME shift  79
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  65
                          spec shift  128
                  closed_block shift  129
                    open_block shift  84
                    assignment shift  126
                      top_stmt shift  125
                          stmt shift  124
                    name_chain shift  80
                 function_call shift  123
                case_statement shift  83
               guard_statement shift  78
         final_guard_statement shift  87
               where_statement shift  86
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 4:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          stmt_list ::= * stmt
          stmt_list ::= * stmt_list stmt
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          array ::= OPENBRAC * maybe_empty_stmt_list RBRAC
     (42) maybe_empty_stmt_list ::= *
          maybe_empty_stmt_list ::= * stmt_list
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  65
                          stmt shift  120
                 function_call shift  123
                     stmt_list shift  7
                         array shift  121
         maybe_empty_stmt_list shift  91
                           num shift  118
                        string shift  117
                          bool shift  116
                     {default} reduce 42

State 5:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= NAME LPAREN * stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= NAME LPAREN * RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          stmt_list ::= * stmt
          stmt_list ::= * stmt_list stmt
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                        RPAREN shift  111
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  65
                          stmt shift  120
                 function_call shift  123
                     stmt_list shift  6
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 6:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= NAME LPAREN stmt_list * RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          stmt_list ::= stmt_list * stmt
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                        RPAREN shift  122
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  65
                          stmt shift  119
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 7:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          stmt_list ::= stmt_list * stmt
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
     (43) maybe_empty_stmt_list ::= stmt_list *
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  65
                          stmt shift  119
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116
                     {default} reduce 43

State 8:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          where_statement ::= name_chain ASSIGN * expr WHERE
          case_statement ::= name_chain ASSIGN * CASE expr OF
          expr ::= * LET NAME ASSIGN expr IN expr
          assignment ::= name_chain ASSIGN * expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                          CASE shift  19
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  51
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 9:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          where_statement ::= where_statement NAME ASSIGN * expr
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  55
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 10:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          final_guard_statement ::= guard_statement WILDCARD ASSIGN * expr
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  56
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 11:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          final_guard_statement ::= guard_statement WILDCARD_N ASSIGN * expr
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  57
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 12:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          guard_statement ::= guard_statement GUARD_S expr ASSIGN * expr
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  58
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 13:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          guard_statement ::= guard_statement GUARD_S * expr ASSIGN expr
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  47
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 14:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          guard_statement ::= guard_statement GUARD_N expr ASSIGN * expr
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  59
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 15:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          guard_statement ::= guard_statement GUARD_N * expr ASSIGN expr
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  48
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 16:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          case_statement ::= case_statement WILDCARD_N POINTER * expr
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  60
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 17:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          case_statement ::= case_statement N_TAB expr POINTER * expr
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  61
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 18:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          case_statement ::= case_statement N_TAB * expr POINTER expr
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  49
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 19:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          case_statement ::= name_chain ASSIGN CASE * expr OF
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  50
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 20:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          guard_statement ::= name_chain GUARD_S expr ASSIGN * expr
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  62
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 21:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          guard_statement ::= name_chain GUARD_S * expr ASSIGN expr
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  52
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 22:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          guard_statement ::= name_chain GUARD_N expr ASSIGN * expr
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  63
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 23:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          guard_statement ::= name_chain GUARD_N * expr ASSIGN expr
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  53
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 24:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= NOT * expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  92
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 25:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  93
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 26:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  68
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 27:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  69
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 28:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= expr SHIFTR * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  76
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 29:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= expr SHIFTL * expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  77
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 30:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= expr OR * expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  66
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 31:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= expr AND * expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  67
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 32:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= expr GORE * expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  72
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 33:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= expr LORE * expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  73
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 34:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= expr GREATERTHAN * expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  74
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 35:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= expr LESSTHAN * expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  75
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 36:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= expr NOTEQUALTO * expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  70
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 37:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= expr EQUALTO * expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  71
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 38:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= expr POW * expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  94
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 39:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= expr MODULO * expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  95
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 40:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= expr TIMES * expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  96
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 41:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  97
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 42:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  98
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 43:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  82
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 44:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= LET NAME ASSIGN expr IN * expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  64
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 45:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= LET NAME ASSIGN * expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  54
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 46:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  25
                           NOT shift  24
                        BITNOT shift  42
                          NAME shift  101
                           LET shift  100
                      OPENBRAC shift  4
                           NUM shift  115
                        STRING shift  114
                       BOOLEAN shift  113
                          expr shift  81
                 function_call shift  123
                         array shift  121
                           num shift  118
                        string shift  117
                          bool shift  116

State 47:
          guard_statement ::= guard_statement GUARD_S expr * ASSIGN expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        ASSIGN shift  12
                            OR shift  30
                           AND shift  31
                        BITXOR shift  26
                        BITAND shift  27
                       EQUALTO shift  37
                    NOTEQUALTO shift  36
                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38

State 48:
          guard_statement ::= guard_statement GUARD_N expr * ASSIGN expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        ASSIGN shift  14
                            OR shift  30
                           AND shift  31
                        BITXOR shift  26
                        BITAND shift  27
                       EQUALTO shift  37
                    NOTEQUALTO shift  36
                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38

State 49:
          case_statement ::= case_statement N_TAB expr * POINTER expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  30
                           AND shift  31
                        BITXOR shift  26
                        BITAND shift  27
                       EQUALTO shift  37
                    NOTEQUALTO shift  36
                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                       POINTER shift  17

State 50:
          case_statement ::= name_chain ASSIGN CASE expr * OF
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  30
                           AND shift  31
                        BITXOR shift  26
                        BITAND shift  27
                       EQUALTO shift  37
                    NOTEQUALTO shift  36
                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                            OF shift  108

State 51:
          where_statement ::= name_chain ASSIGN expr * WHERE
     (37) assignment ::= name_chain ASSIGN expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  30
                           AND shift  31
                        BITXOR shift  26
                        BITAND shift  27
                       EQUALTO shift  37
                    NOTEQUALTO shift  36
                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                         WHERE shift  109
                     {default} reduce 37

State 52:
          guard_statement ::= name_chain GUARD_S expr * ASSIGN expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        ASSIGN shift  20
                            OR shift  30
                           AND shift  31
                        BITXOR shift  26
                        BITAND shift  27
                       EQUALTO shift  37
                    NOTEQUALTO shift  36
                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38

State 53:
          guard_statement ::= name_chain GUARD_N expr * ASSIGN expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        ASSIGN shift  22
                            OR shift  30
                           AND shift  31
                        BITXOR shift  26
                        BITAND shift  27
                       EQUALTO shift  37
                    NOTEQUALTO shift  36
                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38

State 54:
          expr ::= LET NAME ASSIGN expr * IN expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  30
                           AND shift  31
                        BITXOR shift  26
                        BITAND shift  27
                       EQUALTO shift  37
                    NOTEQUALTO shift  36
                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                            IN shift  44

State 55:
     (32) where_statement ::= where_statement NAME ASSIGN expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  30
                           AND shift  31
                        BITXOR shift  26
                        BITAND shift  27
                       EQUALTO shift  37
                    NOTEQUALTO shift  36
                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 32

State 56:
     (28) final_guard_statement ::= guard_statement WILDCARD ASSIGN expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  30
                           AND shift  31
                        BITXOR shift  26
                        BITAND shift  27
                       EQUALTO shift  37
                    NOTEQUALTO shift  36
                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 28

State 57:
     (27) final_guard_statement ::= guard_statement WILDCARD_N ASSIGN expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  30
                           AND shift  31
                        BITXOR shift  26
                        BITAND shift  27
                       EQUALTO shift  37
                    NOTEQUALTO shift  36
                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 27

State 58:
     (26) guard_statement ::= guard_statement GUARD_S expr ASSIGN expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  30
                           AND shift  31
                        BITXOR shift  26
                        BITAND shift  27
                       EQUALTO shift  37
                    NOTEQUALTO shift  36
                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 26

State 59:
     (24) guard_statement ::= guard_statement GUARD_N expr ASSIGN expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  30
                           AND shift  31
                        BITXOR shift  26
                        BITAND shift  27
                       EQUALTO shift  37
                    NOTEQUALTO shift  36
                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 24

State 60:
     (35) case_statement ::= case_statement WILDCARD_N POINTER expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  30
                           AND shift  31
                        BITXOR shift  26
                        BITAND shift  27
                       EQUALTO shift  37
                    NOTEQUALTO shift  36
                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 35

State 61:
     (34) case_statement ::= case_statement N_TAB expr POINTER expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  30
                           AND shift  31
                        BITXOR shift  26
                        BITAND shift  27
                       EQUALTO shift  37
                    NOTEQUALTO shift  36
                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 34

State 62:
     (25) guard_statement ::= name_chain GUARD_S expr ASSIGN expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  30
                           AND shift  31
                        BITXOR shift  26
                        BITAND shift  27
                       EQUALTO shift  37
                    NOTEQUALTO shift  36
                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 25

State 63:
     (23) guard_statement ::= name_chain GUARD_N expr ASSIGN expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  30
                           AND shift  31
                        BITXOR shift  26
                        BITAND shift  27
                       EQUALTO shift  37
                    NOTEQUALTO shift  36
                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 23

State 64:
     (36) expr ::= LET NAME ASSIGN expr IN expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  30
                           AND shift  31
                        BITXOR shift  26
                        BITAND shift  27
                       EQUALTO shift  37
                    NOTEQUALTO shift  36
                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 36

State 65:
     (12) stmt ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  30
                           AND shift  31
                        BITXOR shift  26
                        BITAND shift  27
                       EQUALTO shift  37
                    NOTEQUALTO shift  36
                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                         MINUS reduce 12  ** Parsing conflict **
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 12

State 66:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
     (63) expr ::= expr OR expr *
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           AND shift  31
                        BITXOR shift  26
                        BITAND shift  27
                       EQUALTO shift  37
                    NOTEQUALTO shift  36
                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 63

State 67:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
     (62) expr ::= expr AND expr *
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        BITXOR shift  26
                        BITAND shift  27
                       EQUALTO shift  37
                    NOTEQUALTO shift  36
                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 62

State 68:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr
     (70) expr ::= expr BITXOR expr *

                        BITAND shift  27
                       EQUALTO shift  37
                    NOTEQUALTO shift  36
                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 70

State 69:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
     (69) expr ::= expr BITAND expr *
          expr ::= expr * BITXOR expr

                       EQUALTO shift  37
                    NOTEQUALTO shift  36
                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 69

State 70:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
     (57) expr ::= expr NOTEQUALTO expr *
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 57

State 71:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
     (56) expr ::= expr EQUALTO expr *
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   GREATERTHAN shift  34
                          GORE shift  32
                      LESSTHAN shift  35
                          LORE shift  33
                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 56

State 72:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
     (61) expr ::= expr GORE expr *
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 61

State 73:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
     (60) expr ::= expr LORE expr *
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 60

State 74:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
     (59) expr ::= expr GREATERTHAN expr *
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 59

State 75:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
     (58) expr ::= expr LESSTHAN expr *
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        SHIFTL shift  29
                        SHIFTR shift  28
                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 58

State 76:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
     (68) expr ::= expr SHIFTR expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 68

State 77:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
     (67) expr ::= expr SHIFTL expr *
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                          PLUS shift  46
                         MINUS shift  43
                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 67

State 78:
     (20) spec ::= guard_statement *
          guard_statement ::= guard_statement * GUARD_N expr ASSIGN expr
          guard_statement ::= guard_statement * GUARD_S expr ASSIGN expr
          final_guard_statement ::= guard_statement * WILDCARD_N ASSIGN expr
          final_guard_statement ::= guard_statement * WILDCARD ASSIGN expr
          where_statement ::= guard_statement * WHERE

                       GUARD_N shift  15
                       GUARD_S shift  13
                    WILDCARD_N shift  89
                      WILDCARD shift  88
                         WHERE shift  107
                     {default} reduce 20

State 79:
     (14) name_chain ::= NAME *
     (15) expr ::= NAME *
          function_call ::= NAME * LPAREN stmt_list RPAREN
          function_call ::= NAME * LPAREN RPAREN

                        ASSIGN reduce 14
                        LPAREN shift  5
                          NAME reduce 14
                       GUARD_N reduce 14
                       GUARD_S reduce 14
                     {default} reduce 15

State 80:
          name_chain ::= name_chain * NAME
          guard_statement ::= name_chain * GUARD_N expr ASSIGN expr
          guard_statement ::= name_chain * GUARD_S expr ASSIGN expr
          where_statement ::= name_chain * ASSIGN expr WHERE
          case_statement ::= name_chain * ASSIGN CASE expr OF
          assignment ::= name_chain * ASSIGN expr

                        ASSIGN shift  8
                          NAME shift  110
                       GUARD_N shift  23
                       GUARD_S shift  21

State 81:
          expr ::= expr * PLUS expr
     (50) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 50

State 82:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (51) expr ::= expr MINUS expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  41
                         TIMES shift  40
                        MODULO shift  39
                           POW shift  38
                     {default} reduce 51

State 83:
     (19) spec ::= case_statement *
          case_statement ::= case_statement * N_TAB expr POINTER expr
          case_statement ::= case_statement * WILDCARD_N POINTER expr

                    WILDCARD_N shift  90
                         N_TAB shift  18
                     {default} reduce 19

State 84:
          open_block ::= open_block * NEWLINE spec
          closed_block ::= open_block * CLOSING_RPAREN

                       NEWLINE shift  2
                CLOSING_RPAREN shift  105

State 85:
          where_statement ::= where_statement NAME * ASSIGN expr

                        ASSIGN shift  9

State 86:
     (22) spec ::= where_statement *
          where_statement ::= where_statement * NAME ASSIGN expr

                          NAME shift  85
                     {default} reduce 22

State 87:
     (21) spec ::= final_guard_statement *
          where_statement ::= final_guard_statement * WHERE

                         WHERE shift  106
                     {default} reduce 21

State 88:
          final_guard_statement ::= guard_statement WILDCARD * ASSIGN expr

                        ASSIGN shift  10

State 89:
          final_guard_statement ::= guard_statement WILDCARD_N * ASSIGN expr

                        ASSIGN shift  11

State 90:
          case_statement ::= case_statement WILDCARD_N * POINTER expr

                       POINTER shift  16

State 91:
          array ::= OPENBRAC maybe_empty_stmt_list * RBRAC

                         RBRAC shift  112

State 92:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
     (66) expr ::= NOT expr *
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  38
                     {default} reduce 66

State 93:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
     (65) expr ::= MINUS expr *
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  38
                     {default} reduce 65

State 94:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
     (55) expr ::= expr POW expr *
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  38
                     {default} reduce 55

State 95:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
     (54) expr ::= expr MODULO expr *
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  38
                     {default} reduce 54

State 96:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
     (53) expr ::= expr TIMES expr *
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  38
                     {default} reduce 53

State 97:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
     (52) expr ::= expr DIVIDE expr *
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  38
                     {default} reduce 52

State 98:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
     (64) expr ::= BITNOT expr *
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  38
                     {default} reduce 64

State 99:
          expr ::= LET NAME * ASSIGN expr IN expr

                        ASSIGN shift  45

State 100:
          expr ::= LET * NAME ASSIGN expr IN expr

                          NAME shift  99

State 101:
     (15) expr ::= NAME *
          function_call ::= NAME * LPAREN stmt_list RPAREN
          function_call ::= NAME * LPAREN RPAREN

                        LPAREN shift  5
                     {default} reduce 15

State 102:
          in ::= in start * NEWLINE

                       NEWLINE shift  131

State 103:
     (72) error ::= OPENQUOTEERROR *

                     {default} reduce 72

State 104:
     (71) in ::= error *

                     {default} reduce 71

State 105:
      (8) closed_block ::= open_block CLOSING_RPAREN *

                     {default} reduce 8

State 106:
     (30) where_statement ::= final_guard_statement WHERE *

                     {default} reduce 30

State 107:
     (29) where_statement ::= guard_statement WHERE *

                     {default} reduce 29

State 108:
     (33) case_statement ::= name_chain ASSIGN CASE expr OF *

                     {default} reduce 33

State 109:
     (31) where_statement ::= name_chain ASSIGN expr WHERE *

                     {default} reduce 31

State 110:
     (13) name_chain ::= name_chain NAME *

                     {default} reduce 13

State 111:
     (18) function_call ::= NAME LPAREN RPAREN *

                     {default} reduce 18

State 112:
     (41) array ::= OPENBRAC maybe_empty_stmt_list RBRAC *

                     {default} reduce 41

State 113:
     (49) bool ::= BOOLEAN *

                     {default} reduce 49

State 114:
     (48) string ::= STRING *

                     {default} reduce 48

State 115:
     (47) num ::= NUM *

                     {default} reduce 47

State 116:
     (46) expr ::= bool *

                     {default} reduce 46

State 117:
     (45) expr ::= string *

                     {default} reduce 45

State 118:
     (44) expr ::= num *

                     {default} reduce 44

State 119:
     (39) stmt_list ::= stmt_list stmt *

                     {default} reduce 39

State 120:
     (38) stmt_list ::= stmt *

                     {default} reduce 38

State 121:
     (40) expr ::= array *

                     {default} reduce 40

State 122:
     (17) function_call ::= NAME LPAREN stmt_list RPAREN *

                     {default} reduce 17

State 123:
     (16) expr ::= function_call *

                     {default} reduce 16

State 124:
     (11) top_stmt ::= stmt *

                     {default} reduce 11

State 125:
     (10) spec ::= top_stmt *

                     {default} reduce 10

State 126:
      (9) spec ::= assignment *

                     {default} reduce 9

State 127:
      (7) open_block ::= open_block NEWLINE spec *

                     {default} reduce 7

State 128:
      (6) open_block ::= OPENING_LPAREN spec *

                     {default} reduce 6

State 129:
      (5) spec ::= closed_block *

                     {default} reduce 5

State 130:
      (4) start ::= spec *

                     {default} reduce 4

State 131:
      (3) in ::= in start NEWLINE *

                     {default} reduce 3

State 132:
      (2) in ::= in NEWLINE *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: ASSIGN
    2: BITOR
    3: FUNCTION_DEC
    4: INDEX
    5: OR
    6: AND
    7: BITXOR
    8: BITAND
    9: EQUALTO
   10: NOTEQUALTO
   11: GREATERTHAN
   12: GORE
   13: LESSTHAN
   14: LORE
   15: SHIFTL
   16: SHIFTR
   17: PLUS
   18: MINUS
   19: DIVIDE
   20: TIMES
   21: MODULO
   22: POW
   23: NOT
   24: BITNOT
   25: UMINUS
   26: PLUSPLUS
   27: LPAREN
   28: RPAREN
   29: COMMA
   30: LBRAC
   31: RBRAC
   32: COLLECTARRAY
   33: NEWLINE
   34: OPENING_LPAREN
   35: CLOSING_RPAREN
   36: NAME
   37: GUARD_N
   38: GUARD_S
   39: WILDCARD_N
   40: WILDCARD
   41: WHERE
   42: CASE
   43: OF
   44: N_TAB
   45: POINTER
   46: LET
   47: IN
   48: OPENBRAC
   49: NUM
   50: STRING
   51: BOOLEAN
   52: OPENQUOTEERROR
   53: error: OPENQUOTEERROR
   54: expr: MINUS NOT BITNOT NAME LET OPENBRAC NUM STRING BOOLEAN
   55: id:
   56: main: <lambda> MINUS NOT BITNOT NEWLINE OPENING_LPAREN NAME LET OPENBRAC NUM STRING BOOLEAN OPENQUOTEERROR
   57: in: <lambda> MINUS NOT BITNOT NEWLINE OPENING_LPAREN NAME LET OPENBRAC NUM STRING BOOLEAN OPENQUOTEERROR
   58: start: MINUS NOT BITNOT OPENING_LPAREN NAME LET OPENBRAC NUM STRING BOOLEAN
   59: spec: MINUS NOT BITNOT OPENING_LPAREN NAME LET OPENBRAC NUM STRING BOOLEAN
   60: closed_block: OPENING_LPAREN
   61: open_block: OPENING_LPAREN
   62: assignment: NAME
   63: top_stmt: MINUS NOT BITNOT NAME LET OPENBRAC NUM STRING BOOLEAN
   64: stmt: MINUS NOT BITNOT NAME LET OPENBRAC NUM STRING BOOLEAN
   65: name_chain: NAME
   66: function_call: NAME
   67: stmt_list: MINUS NOT BITNOT NAME LET OPENBRAC NUM STRING BOOLEAN
   68: case_statement: NAME
   69: guard_statement: NAME
   70: final_guard_statement: NAME
   71: where_statement: NAME
   72: array: OPENBRAC
   73: maybe_empty_stmt_list: <lambda> MINUS NOT BITNOT NAME LET OPENBRAC NUM STRING BOOLEAN
   74: num: NUM
   75: string: STRING
   76: bool: BOOLEAN
