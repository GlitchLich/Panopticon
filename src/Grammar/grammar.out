State 0:
          main ::= * in
      (1) in ::= *
          in ::= * in DELIMITER
          in ::= * in start DELIMITER
          in ::= * in test DELIMITER
          in ::= * error
          error ::= * OPENQUOTEERROR

                OPENQUOTEERROR shift  128
                         error shift  129
                          main accept
                            in shift  1
                     {default} reduce 1

State 1:
      (0) main ::= in *
          in ::= in * DELIMITER
          in ::= in * start DELIMITER
          in ::= in * test DELIMITER
          start ::= * spec
          spec ::= * assignment
          spec ::= * top_stmt
          top_stmt ::= * stmt
          stmt ::= * expr
          name_chain ::= * name_chain NAME
          name_chain ::= * NAME
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          test ::= * case_statement
          guard_statement ::= * name_chain LCURL BITOR expr ASSIGN expr DELIMITER
          guard_statement ::= * guard_statement BITOR expr ASSIGN expr DELIMITER
          final_guard_statement ::= * guard_statement BITOR expr ASSIGN expr RCURL
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr RCURL
          assignment ::= * final_guard_statement
          assignment ::= * guard_statement BITOR expr ASSIGN expr DELIMITER final_where_statement
          assignment ::= * guard_statement WILDCARD ASSIGN expr DELIMITER final_where_statement
          case_statement ::= * name_chain ASSIGN CASE expr OF
          test ::= * LET IN
          assignment ::= * name_chain ASSIGN expr
          assignment ::= * name_chain ASSIGN expr LCURL final_where_statement
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          assignment ::= * name_chain maybe_empty_name_chain ASSIGN expr
          assignment ::= * NAME maybe_empty_name_chain ASSIGN expr
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                             $ reduce 0
                          NAME shift  51
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                     DELIMITER shift  176
                           LET shift  108
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  76
                         start shift  127
                          test shift  126
                          spec shift  173
                    assignment shift  172
                      top_stmt shift  171
                          stmt shift  170
                    name_chain shift  52
                 function_call shift  124
                   array_index shift  106
                case_statement shift  136
               guard_statement shift  95
         final_guard_statement shift  131
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 2:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          stmt_list ::= * stmt
          stmt_list ::= * stmt_list stmt
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          array ::= LBRAC * maybe_empty_stmt_list RBRAC
     (41) maybe_empty_stmt_list ::= *
          maybe_empty_stmt_list ::= * stmt_list
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  76
                          stmt shift  165
                 function_call shift  124
                     stmt_list shift  10
                   array_index shift  106
                         array shift  166
         maybe_empty_stmt_list shift  122
                           num shift  164
                        string shift  163
                          bool shift  162
                     {default} reduce 41

State 3:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= NAME LPAREN * stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= NAME LPAREN * RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          stmt_list ::= * stmt
          stmt_list ::= * stmt_list stmt
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          pattern ::= LPAREN * NAME PREPEND NAME RPAREN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  94
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                        RPAREN shift  152
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  76
                          stmt shift  165
                 function_call shift  124
                     stmt_list shift  9
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 4:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          expr ::= array_index LPAREN * stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          function_call ::= array_index LPAREN * RPAREN
          expr ::= * function_call
          stmt_list ::= * stmt
          stmt_list ::= * stmt_list stmt
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                        RPAREN shift  154
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  76
                          stmt shift  165
                 function_call shift  124
                     stmt_list shift  8
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 5:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= NAME LPAREN * stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= NAME LPAREN * RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          stmt_list ::= * stmt
          stmt_list ::= * stmt_list stmt
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                        RPAREN shift  152
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  76
                          stmt shift  165
                 function_call shift  124
                     stmt_list shift  9
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 6:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          function_call ::= NAME LBRAC RBRAC LPAREN * stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          stmt_list ::= * stmt
          stmt_list ::= * stmt_list stmt
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  76
                          stmt shift  165
                 function_call shift  124
                     stmt_list shift  7
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 7:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          function_call ::= NAME LBRAC RBRAC LPAREN stmt_list * RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          stmt_list ::= stmt_list * stmt
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                        RPAREN shift  150
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  76
                          stmt shift  167
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 8:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          expr ::= array_index LPAREN stmt_list * RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          stmt_list ::= stmt_list * stmt
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                        RPAREN shift  168
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  76
                          stmt shift  167
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 9:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= NAME LPAREN stmt_list * RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          stmt_list ::= stmt_list * stmt
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                        RPAREN shift  169
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  76
                          stmt shift  167
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 10:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          stmt_list ::= stmt_list * stmt
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
     (42) maybe_empty_stmt_list ::= stmt_list *
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  76
                          stmt shift  167
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162
                     {default} reduce 42

State 11:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          case_statement ::= name_chain ASSIGN * CASE expr OF
          assignment ::= name_chain ASSIGN * expr
          assignment ::= name_chain ASSIGN * expr LCURL final_where_statement
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                          CASE shift  19
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  65
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 12:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          function_call ::= NAME LBRAC * RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= NAME LBRAC * expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         RBRAC shift  121
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  69
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 13:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= LPAREN * MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                         MINUS shift  25
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  72
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 14:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          final_guard_statement ::= guard_statement WILDCARD ASSIGN * expr RCURL
          assignment ::= guard_statement WILDCARD ASSIGN * expr DELIMITER final_where_statement
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  59
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 15:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          guard_statement ::= guard_statement BITOR expr ASSIGN * expr DELIMITER
          final_guard_statement ::= guard_statement BITOR expr ASSIGN * expr RCURL
          assignment ::= guard_statement BITOR expr ASSIGN * expr DELIMITER final_where_statement
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  60
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 16:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          guard_statement ::= guard_statement BITOR * expr ASSIGN expr DELIMITER
          final_guard_statement ::= guard_statement BITOR * expr ASSIGN expr RCURL
          assignment ::= guard_statement BITOR * expr ASSIGN expr DELIMITER final_where_statement
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  62
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 17:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          assignment ::= NAME maybe_empty_name_chain ASSIGN * expr
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  74
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 18:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          assignment ::= name_chain maybe_empty_name_chain ASSIGN * expr
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  75
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 19:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          case_statement ::= name_chain ASSIGN CASE * expr OF
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  63
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 20:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          where_statement ::= where_statement name_chain ASSIGN * expr DELIMITER
          final_where_statement ::= where_statement name_chain ASSIGN * expr RCURL DELIMITER RCURL
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  61
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 21:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          where_statement ::= WHERE name_chain ASSIGN * expr LCURL
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  64
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 22:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          guard_statement ::= name_chain LCURL BITOR expr ASSIGN * expr DELIMITER
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  66
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 23:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          guard_statement ::= name_chain LCURL BITOR * expr ASSIGN expr DELIMITER
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  67
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 24:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          array_index ::= array_index LBRAC * expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  70
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 25:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= LPAREN MINUS * expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  71
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 26:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= NOT * expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  100
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 27:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  101
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 28:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  82
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 29:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  83
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 30:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= expr SHIFTR * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  90
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 31:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= expr SHIFTL * expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  91
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 32:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= expr OR * expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  80
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 33:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= expr AND * expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  81
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 34:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= expr GORE * expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  86
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 35:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= expr LORE * expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  87
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 36:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= expr GREATERTHAN * expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  88
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 37:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= expr LESSTHAN * expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  89
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 38:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= expr NOTEQUALTO * expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  84
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 39:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= expr EQUALTO * expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  85
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 40:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= expr POW * expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  102
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 41:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= expr MODULO * expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  103
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 42:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= expr TIMES * expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  104
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 43:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  105
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 44:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  92
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 45:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  93
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 46:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= expr PLUSPLUS * expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  78
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 47:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= expr APPEND * expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  79
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 48:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= expr PREPEND * expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  77
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 49:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= PRINT LPAREN * expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  73
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 50:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= function_call LBRAC * expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                          NAME shift  107
                           NOT shift  26
                        BITNOT shift  27
                        LPAREN shift  13
                         LBRAC shift  2
                         PRINT shift  123
                           NUM shift  159
                        STRING shift  158
                       BOOLEAN shift  157
                          expr shift  68
                 function_call shift  124
                   array_index shift  106
                         array shift  166
                           num shift  164
                        string shift  163
                          bool shift  162

State 51:
          name_chain ::= * name_chain NAME
          name_chain ::= * NAME
     (11) name_chain ::= NAME *
     (12) expr ::= NAME *
          function_call ::= NAME * LPAREN stmt_list RPAREN
          function_call ::= NAME * LBRAC RBRAC LPAREN stmt_list RPAREN
          function_call ::= NAME * LPAREN RPAREN
          maybe_empty_name_chain ::= * name_chain
          maybe_empty_name_chain ::= * pattern
          assignment ::= NAME * maybe_empty_name_chain ASSIGN expr
          pattern ::= * LPAREN NAME PREPEND NAME RPAREN
          array_index ::= NAME * LBRAC expr RBRAC

                        ASSIGN reduce 11
                          NAME reduce 11
                        LPAREN shift  3
                         LBRAC shift  12
                         LCURL reduce 11
                    name_chain shift  119
        maybe_empty_name_chain shift  110
                       pattern shift  138
                     {default} reduce 12

State 52:
          name_chain ::= * name_chain NAME
          name_chain ::= name_chain * NAME
          name_chain ::= * NAME
          guard_statement ::= name_chain * LCURL BITOR expr ASSIGN expr DELIMITER
          case_statement ::= name_chain * ASSIGN CASE expr OF
          assignment ::= name_chain * ASSIGN expr
          assignment ::= name_chain * ASSIGN expr LCURL final_where_statement
          maybe_empty_name_chain ::= * name_chain
          maybe_empty_name_chain ::= * pattern
          assignment ::= name_chain * maybe_empty_name_chain ASSIGN expr
          pattern ::= * LPAREN NAME PREPEND NAME RPAREN

                        ASSIGN shift  11
                          NAME shift  147
                        LPAREN shift  114
                         LCURL shift  118
                    name_chain shift  119
        maybe_empty_name_chain shift  115
                       pattern shift  138

State 53:
          assignment ::= guard_statement WILDCARD ASSIGN expr DELIMITER * final_where_statement
          where_statement ::= * WHERE LCURL
          where_statement ::= * WHERE name_chain ASSIGN expr LCURL
          where_statement ::= * where_statement name_chain ASSIGN expr DELIMITER
          final_where_statement ::= * where_statement name_chain ASSIGN expr RCURL DELIMITER RCURL

                         WHERE shift  57
         final_where_statement shift  132
               where_statement shift  58

State 54:
     (23) guard_statement ::= guard_statement BITOR expr ASSIGN expr DELIMITER *
          assignment ::= guard_statement BITOR expr ASSIGN expr DELIMITER * final_where_statement
          where_statement ::= * WHERE LCURL
          where_statement ::= * WHERE name_chain ASSIGN expr LCURL
          where_statement ::= * where_statement name_chain ASSIGN expr DELIMITER
          final_where_statement ::= * where_statement name_chain ASSIGN expr RCURL DELIMITER RCURL

                         WHERE shift  57
         final_where_statement shift  135
               where_statement shift  58
                     {default} reduce 23

State 55:
          where_statement ::= * WHERE LCURL
          where_statement ::= * WHERE name_chain ASSIGN expr LCURL
          where_statement ::= * where_statement name_chain ASSIGN expr DELIMITER
          final_where_statement ::= * where_statement name_chain ASSIGN expr RCURL DELIMITER RCURL
          assignment ::= name_chain ASSIGN expr LCURL * final_where_statement

                         WHERE shift  57
         final_where_statement shift  140
               where_statement shift  58

State 56:
          expr ::= expr COMPOSITION * function_call
          expr ::= expr COMPOSITION * NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC

                          NAME shift  99
                 function_call shift  125
                   array_index shift  98

State 57:
          name_chain ::= * name_chain NAME
          name_chain ::= * NAME
          where_statement ::= WHERE * LCURL
          where_statement ::= WHERE * name_chain ASSIGN expr LCURL

                          NAME shift  144
                         LCURL shift  143
                    name_chain shift  97

State 58:
          name_chain ::= * name_chain NAME
          name_chain ::= * NAME
          where_statement ::= where_statement * name_chain ASSIGN expr DELIMITER
          final_where_statement ::= where_statement * name_chain ASSIGN expr RCURL DELIMITER RCURL

                          NAME shift  144
                    name_chain shift  96

State 59:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          final_guard_statement ::= guard_statement WILDCARD ASSIGN expr * RCURL
          assignment ::= guard_statement WILDCARD ASSIGN expr * DELIMITER final_where_statement
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  56
                       PREPEND shift  48
                        APPEND shift  47
                            OR shift  32
                           AND shift  33
                        BITXOR shift  28
                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     DELIMITER shift  53
                         RCURL shift  133

State 60:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          guard_statement ::= guard_statement BITOR expr ASSIGN expr * DELIMITER
          final_guard_statement ::= guard_statement BITOR expr ASSIGN expr * RCURL
          assignment ::= guard_statement BITOR expr ASSIGN expr * DELIMITER final_where_statement
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  56
                       PREPEND shift  48
                        APPEND shift  47
                            OR shift  32
                           AND shift  33
                        BITXOR shift  28
                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     DELIMITER shift  54
                         RCURL shift  134

State 61:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          where_statement ::= where_statement name_chain ASSIGN expr * DELIMITER
          final_where_statement ::= where_statement name_chain ASSIGN expr * RCURL DELIMITER RCURL
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  56
                       PREPEND shift  48
                        APPEND shift  47
                            OR shift  32
                           AND shift  33
                        BITXOR shift  28
                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     DELIMITER shift  142
                         RCURL shift  117

State 62:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          guard_statement ::= guard_statement BITOR expr * ASSIGN expr DELIMITER
          final_guard_statement ::= guard_statement BITOR expr * ASSIGN expr RCURL
          assignment ::= guard_statement BITOR expr * ASSIGN expr DELIMITER final_where_statement
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        ASSIGN shift  15
                   COMPOSITION shift  56
                       PREPEND shift  48
                        APPEND shift  47
                            OR shift  32
                           AND shift  33
                        BITXOR shift  28
                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46

State 63:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          case_statement ::= name_chain ASSIGN CASE expr * OF
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  56
                       PREPEND shift  48
                        APPEND shift  47
                            OR shift  32
                           AND shift  33
                        BITXOR shift  28
                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                            OF shift  139

State 64:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          where_statement ::= WHERE name_chain ASSIGN expr * LCURL
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  56
                       PREPEND shift  48
                        APPEND shift  47
                            OR shift  32
                           AND shift  33
                        BITXOR shift  28
                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                         LCURL shift  145

State 65:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
     (35) assignment ::= name_chain ASSIGN expr *
          assignment ::= name_chain ASSIGN expr * LCURL final_where_statement
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  56
                       PREPEND shift  48
                        APPEND shift  47
                            OR shift  32
                           AND shift  33
                        BITXOR shift  28
                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                         LCURL shift  55
                     {default} reduce 35

State 66:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          guard_statement ::= name_chain LCURL BITOR expr ASSIGN expr * DELIMITER
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  56
                       PREPEND shift  48
                        APPEND shift  47
                            OR shift  32
                           AND shift  33
                        BITXOR shift  28
                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     DELIMITER shift  146

State 67:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          guard_statement ::= name_chain LCURL BITOR expr * ASSIGN expr DELIMITER
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        ASSIGN shift  22
                   COMPOSITION shift  56
                       PREPEND shift  48
                        APPEND shift  47
                            OR shift  32
                           AND shift  33
                        BITXOR shift  28
                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46

State 68:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr
          array_index ::= function_call LBRAC expr * RBRAC

                   COMPOSITION shift  56
                       PREPEND shift  48
                        APPEND shift  47
                            OR shift  32
                           AND shift  33
                        BITXOR shift  28
                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                         RBRAC shift  149

State 69:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr
          array_index ::= NAME LBRAC expr * RBRAC

                   COMPOSITION shift  56
                       PREPEND shift  48
                        APPEND shift  47
                            OR shift  32
                           AND shift  33
                        BITXOR shift  28
                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                         RBRAC shift  151

State 70:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr
          array_index ::= array_index LBRAC expr * RBRAC

                   COMPOSITION shift  56
                       PREPEND shift  48
                        APPEND shift  47
                            OR shift  32
                           AND shift  33
                        BITXOR shift  28
                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                         RBRAC shift  153

State 71:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= LPAREN MINUS expr * RPAREN
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  56
                       PREPEND shift  48
                        APPEND shift  47
                            OR shift  32
                           AND shift  33
                        BITXOR shift  28
                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                        RPAREN shift  156

State 72:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  56
                       PREPEND shift  48
                        APPEND shift  47
                            OR shift  32
                           AND shift  33
                        BITXOR shift  28
                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                        RPAREN shift  160

State 73:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= PRINT LPAREN expr * RPAREN
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  56
                       PREPEND shift  48
                        APPEND shift  47
                            OR shift  32
                           AND shift  33
                        BITXOR shift  28
                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                        RPAREN shift  161

State 74:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
     (54) assignment ::= NAME maybe_empty_name_chain ASSIGN expr *
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  56
                       PREPEND shift  48
                        APPEND shift  47
                            OR shift  32
                           AND shift  33
                        BITXOR shift  28
                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 54

State 75:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
     (53) assignment ::= name_chain maybe_empty_name_chain ASSIGN expr *
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  56
                       PREPEND shift  48
                        APPEND shift  47
                            OR shift  32
                           AND shift  33
                        BITXOR shift  28
                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 53

State 76:
      (9) stmt ::= expr *
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  56
                       PREPEND shift  48
                        APPEND shift  47
                            OR shift  32
                           AND shift  33
                        BITXOR shift  28
                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 9

State 77:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
     (56) expr ::= expr PREPEND expr *
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                       PREPEND shift  48
                        APPEND shift  47
                            OR shift  32
                           AND shift  33
                        BITXOR shift  28
                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 56

State 78:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
     (58) expr ::= expr PLUSPLUS expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  32
                           AND shift  33
                        BITXOR shift  28
                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 58

State 79:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
     (57) expr ::= expr APPEND expr *
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  32
                           AND shift  33
                        BITXOR shift  28
                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 57

State 80:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
     (72) expr ::= expr OR expr *
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           AND shift  33
                        BITXOR shift  28
                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 72

State 81:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
     (71) expr ::= expr AND expr *
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        BITXOR shift  28
                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 71

State 82:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr
     (79) expr ::= expr BITXOR expr *

                        BITAND shift  29
                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 79

State 83:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
     (78) expr ::= expr BITAND expr *
          expr ::= expr * BITXOR expr

                       EQUALTO shift  39
                    NOTEQUALTO shift  38
                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 78

State 84:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
     (66) expr ::= expr NOTEQUALTO expr *
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 66

State 85:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
     (65) expr ::= expr EQUALTO expr *
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   GREATERTHAN shift  36
                          GORE shift  34
                      LESSTHAN shift  37
                          LORE shift  35
                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 65

State 86:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
     (70) expr ::= expr GORE expr *
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 70

State 87:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
     (69) expr ::= expr LORE expr *
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 69

State 88:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
     (68) expr ::= expr GREATERTHAN expr *
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 68

State 89:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
     (67) expr ::= expr LESSTHAN expr *
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        SHIFTL shift  31
                        SHIFTR shift  30
                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 67

State 90:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
     (77) expr ::= expr SHIFTR expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 77

State 91:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
     (76) expr ::= expr SHIFTL expr *
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                          PLUS shift  45
                         MINUS shift  44
                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 76

State 92:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (60) expr ::= expr MINUS expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 60

State 93:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
     (59) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  43
                         TIMES shift  42
                        MODULO shift  41
                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 59

State 94:
     (12) expr ::= NAME *
          function_call ::= NAME * LPAREN stmt_list RPAREN
          function_call ::= NAME * LBRAC RBRAC LPAREN stmt_list RPAREN
          function_call ::= NAME * LPAREN RPAREN
          pattern ::= LPAREN NAME * PREPEND NAME RPAREN
          array_index ::= NAME * LBRAC expr RBRAC

                       PREPEND shift  112
                        LPAREN shift  5
                         LBRAC shift  12
                     {default} reduce 12

State 95:
          guard_statement ::= guard_statement * BITOR expr ASSIGN expr DELIMITER
          final_guard_statement ::= guard_statement * BITOR expr ASSIGN expr RCURL
          final_guard_statement ::= guard_statement * WILDCARD ASSIGN expr RCURL
          assignment ::= guard_statement * BITOR expr ASSIGN expr DELIMITER final_where_statement
          assignment ::= guard_statement * WILDCARD ASSIGN expr DELIMITER final_where_statement

                         BITOR shift  16
                      WILDCARD shift  109

State 96:
          name_chain ::= name_chain * NAME
          where_statement ::= where_statement name_chain * ASSIGN expr DELIMITER
          final_where_statement ::= where_statement name_chain * ASSIGN expr RCURL DELIMITER RCURL

                        ASSIGN shift  20
                          NAME shift  148

State 97:
          name_chain ::= name_chain * NAME
          where_statement ::= WHERE name_chain * ASSIGN expr LCURL

                        ASSIGN shift  21
                          NAME shift  148

State 98:
          function_call ::= array_index * LPAREN RPAREN
          array_index ::= array_index * LBRAC expr RBRAC

                        LPAREN shift  120
                         LBRAC shift  24

State 99:
     (14) expr ::= expr COMPOSITION NAME *
          function_call ::= NAME * LPAREN stmt_list RPAREN
          function_call ::= NAME * LBRAC RBRAC LPAREN stmt_list RPAREN
          function_call ::= NAME * LPAREN RPAREN
          array_index ::= NAME * LBRAC expr RBRAC

                        LPAREN shift  5
                         LBRAC shift  12
                     {default} reduce 14

State 100:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
     (75) expr ::= NOT expr *
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 75

State 101:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
     (73) expr ::= BITNOT expr *
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 73

State 102:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
     (64) expr ::= expr POW expr *
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 64

State 103:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
     (63) expr ::= expr MODULO expr *
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 63

State 104:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
     (62) expr ::= expr TIMES expr *
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 62

State 105:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
     (61) expr ::= expr DIVIDE expr *
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  40
                      PLUSPLUS shift  46
                     {default} reduce 61

State 106:
          expr ::= array_index * LPAREN stmt_list RPAREN
          function_call ::= array_index * LPAREN RPAREN
          array_index ::= array_index * LBRAC expr RBRAC
     (83) expr ::= array_index *

                        LPAREN shift  4
                         LBRAC shift  24
                     {default} reduce 83

State 107:
     (12) expr ::= NAME *
          function_call ::= NAME * LPAREN stmt_list RPAREN
          function_call ::= NAME * LBRAC RBRAC LPAREN stmt_list RPAREN
          function_call ::= NAME * LPAREN RPAREN
          array_index ::= NAME * LBRAC expr RBRAC

                        LPAREN shift  5
                         LBRAC shift  12
                     {default} reduce 12

State 108:
          test ::= LET * IN

                            IN shift  130

State 109:
          final_guard_statement ::= guard_statement WILDCARD * ASSIGN expr RCURL
          assignment ::= guard_statement WILDCARD * ASSIGN expr DELIMITER final_where_statement

                        ASSIGN shift  14

State 110:
          assignment ::= NAME maybe_empty_name_chain * ASSIGN expr

                        ASSIGN shift  17

State 111:
          pattern ::= LPAREN NAME PREPEND NAME * RPAREN

                        RPAREN shift  137

State 112:
          pattern ::= LPAREN NAME PREPEND * NAME RPAREN

                          NAME shift  111

State 113:
          pattern ::= LPAREN NAME * PREPEND NAME RPAREN

                       PREPEND shift  112

State 114:
          pattern ::= LPAREN * NAME PREPEND NAME RPAREN

                          NAME shift  113

State 115:
          assignment ::= name_chain maybe_empty_name_chain * ASSIGN expr

                        ASSIGN shift  18

State 116:
          final_where_statement ::= where_statement name_chain ASSIGN expr RCURL DELIMITER * RCURL

                         RCURL shift  141

State 117:
          final_where_statement ::= where_statement name_chain ASSIGN expr RCURL * DELIMITER RCURL

                     DELIMITER shift  116

State 118:
          guard_statement ::= name_chain LCURL * BITOR expr ASSIGN expr DELIMITER

                         BITOR shift  23

State 119:
          name_chain ::= name_chain * NAME
     (51) maybe_empty_name_chain ::= name_chain *

                          NAME shift  148
                     {default} reduce 51

State 120:
          function_call ::= array_index LPAREN * RPAREN

                        RPAREN shift  154

State 121:
          function_call ::= NAME LBRAC RBRAC * LPAREN stmt_list RPAREN

                        LPAREN shift  6

State 122:
          array ::= LBRAC maybe_empty_stmt_list * RBRAC

                         RBRAC shift  155

State 123:
          expr ::= PRINT * LPAREN expr RPAREN

                        LPAREN shift  49

State 124:
     (20) expr ::= function_call *
          array_index ::= function_call * LBRAC expr RBRAC

                         LBRAC shift  50
                         LBRAC reduce 20  ** Parsing conflict **
                     {default} reduce 20

State 125:
     (13) expr ::= expr COMPOSITION function_call *
          array_index ::= function_call * LBRAC expr RBRAC

                         LBRAC shift  50
                     {default} reduce 13

State 126:
          in ::= in test * DELIMITER

                     DELIMITER shift  174

State 127:
          in ::= in start * DELIMITER

                     DELIMITER shift  175

State 128:
     (85) error ::= OPENQUOTEERROR *

                     {default} reduce 85

State 129:
     (84) in ::= error *

                     {default} reduce 84

State 130:
     (34) test ::= LET IN *

                     {default} reduce 34

State 131:
     (26) assignment ::= final_guard_statement *

                     {default} reduce 26

State 132:
     (28) assignment ::= guard_statement WILDCARD ASSIGN expr DELIMITER final_where_statement *

                     {default} reduce 28

State 133:
     (25) final_guard_statement ::= guard_statement WILDCARD ASSIGN expr RCURL *

                     {default} reduce 25

State 134:
     (24) final_guard_statement ::= guard_statement BITOR expr ASSIGN expr RCURL *

                     {default} reduce 24

State 135:
     (27) assignment ::= guard_statement BITOR expr ASSIGN expr DELIMITER final_where_statement *

                     {default} reduce 27

State 136:
     (21) test ::= case_statement *

                     {default} reduce 21

State 137:
     (55) pattern ::= LPAREN NAME PREPEND NAME RPAREN *

                     {default} reduce 55

State 138:
     (52) maybe_empty_name_chain ::= pattern *

                     {default} reduce 52

State 139:
     (33) case_statement ::= name_chain ASSIGN CASE expr OF *

                     {default} reduce 33

State 140:
     (36) assignment ::= name_chain ASSIGN expr LCURL final_where_statement *

                     {default} reduce 36

State 141:
     (32) final_where_statement ::= where_statement name_chain ASSIGN expr RCURL DELIMITER RCURL *

                     {default} reduce 32

State 142:
     (31) where_statement ::= where_statement name_chain ASSIGN expr DELIMITER *

                     {default} reduce 31

State 143:
     (29) where_statement ::= WHERE LCURL *

                     {default} reduce 29

State 144:
     (11) name_chain ::= NAME *

                     {default} reduce 11

State 145:
     (30) where_statement ::= WHERE name_chain ASSIGN expr LCURL *

                     {default} reduce 30

State 146:
     (22) guard_statement ::= name_chain LCURL BITOR expr ASSIGN expr DELIMITER *

                     {default} reduce 22

State 147:
     (10) name_chain ::= name_chain NAME *
     (11) name_chain ::= NAME *

                        ASSIGN reduce 11  ** Parsing conflict **
                          NAME reduce 11  ** Parsing conflict **
                     {default} reduce 10

State 148:
     (10) name_chain ::= name_chain NAME *

                     {default} reduce 10

State 149:
     (80) array_index ::= function_call LBRAC expr RBRAC *

                     {default} reduce 80

State 150:
     (16) function_call ::= NAME LBRAC RBRAC LPAREN stmt_list RPAREN *

                     {default} reduce 16

State 151:
     (81) array_index ::= NAME LBRAC expr RBRAC *

                     {default} reduce 81

State 152:
     (18) function_call ::= NAME LPAREN RPAREN *

                     {default} reduce 18

State 153:
     (82) array_index ::= array_index LBRAC expr RBRAC *

                     {default} reduce 82

State 154:
     (19) function_call ::= array_index LPAREN RPAREN *

                     {default} reduce 19

State 155:
     (40) array ::= LBRAC maybe_empty_stmt_list RBRAC *

                     {default} reduce 40

State 156:
     (74) expr ::= LPAREN MINUS expr RPAREN *

                     {default} reduce 74

State 157:
     (50) bool ::= BOOLEAN *

                     {default} reduce 50

State 158:
     (49) string ::= STRING *

                     {default} reduce 49

State 159:
     (48) num ::= NUM *

                     {default} reduce 48

State 160:
     (47) expr ::= LPAREN expr RPAREN *

                     {default} reduce 47

State 161:
     (46) expr ::= PRINT LPAREN expr RPAREN *

                     {default} reduce 46

State 162:
     (45) expr ::= bool *

                     {default} reduce 45

State 163:
     (44) expr ::= string *

                     {default} reduce 44

State 164:
     (43) expr ::= num *

                     {default} reduce 43

State 165:
     (37) stmt_list ::= stmt *

                     {default} reduce 37

State 166:
     (39) expr ::= array *

                     {default} reduce 39

State 167:
     (38) stmt_list ::= stmt_list stmt *

                     {default} reduce 38

State 168:
     (17) expr ::= array_index LPAREN stmt_list RPAREN *

                     {default} reduce 17

State 169:
     (15) function_call ::= NAME LPAREN stmt_list RPAREN *

                     {default} reduce 15

State 170:
      (8) top_stmt ::= stmt *

                     {default} reduce 8

State 171:
      (7) spec ::= top_stmt *

                     {default} reduce 7

State 172:
      (6) spec ::= assignment *

                     {default} reduce 6

State 173:
      (5) start ::= spec *

                     {default} reduce 5

State 174:
      (4) in ::= in test DELIMITER *

                     {default} reduce 4

State 175:
      (3) in ::= in start DELIMITER *

                     {default} reduce 3

State 176:
      (2) in ::= in DELIMITER *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: ASSIGN
    2: COLON
    3: NAME
    4: BITOR
    5: FUNCTION_DEC
    6: COMPOSITION
    7: FUNCTION_CALL
    8: PREPEND
    9: APPEND
   10: INDEX
   11: OR
   12: AND
   13: BITXOR
   14: BITAND
   15: EQUALTO
   16: NOTEQUALTO
   17: GREATERTHAN
   18: GORE
   19: LESSTHAN
   20: LORE
   21: SHIFTL
   22: SHIFTR
   23: PLUS
   24: MINUS
   25: DIVIDE
   26: TIMES
   27: MODULO
   28: POW
   29: NOT
   30: BITNOT
   31: UMINUS
   32: PLUSPLUS
   33: LPAREN
   34: RPAREN
   35: LBRAC
   36: RBRAC
   37: COMMA
   38: COLLECTARRAY
   39: DELIMITER
   40: LCURL
   41: RCURL
   42: WILDCARD
   43: WHERE
   44: CASE
   45: OF
   46: LET
   47: IN
   48: PRINT
   49: NUM
   50: STRING
   51: BOOLEAN
   52: OPENQUOTEERROR
   53: error: OPENQUOTEERROR
   54: expr: NAME NOT BITNOT LPAREN LBRAC PRINT NUM STRING BOOLEAN
   55: id:
   56: main: <lambda> NAME NOT BITNOT LPAREN LBRAC DELIMITER LET PRINT NUM STRING BOOLEAN OPENQUOTEERROR
   57: in: <lambda> NAME NOT BITNOT LPAREN LBRAC DELIMITER LET PRINT NUM STRING BOOLEAN OPENQUOTEERROR
   58: start: NAME NOT BITNOT LPAREN LBRAC PRINT NUM STRING BOOLEAN
   59: test: NAME LET
   60: spec: NAME NOT BITNOT LPAREN LBRAC PRINT NUM STRING BOOLEAN
   61: assignment: NAME
   62: top_stmt: NAME NOT BITNOT LPAREN LBRAC PRINT NUM STRING BOOLEAN
   63: stmt: NAME NOT BITNOT LPAREN LBRAC PRINT NUM STRING BOOLEAN
   64: name_chain: NAME
   65: function_call: NAME
   66: stmt_list: NAME NOT BITNOT LPAREN LBRAC PRINT NUM STRING BOOLEAN
   67: array_index: NAME
   68: case_statement: NAME
   69: guard_statement: NAME
   70: final_guard_statement: NAME
   71: final_where_statement: WHERE
   72: where_statement: WHERE
   73: array: LBRAC
   74: maybe_empty_stmt_list: <lambda> NAME NOT BITNOT LPAREN LBRAC PRINT NUM STRING BOOLEAN
   75: num: NUM
   76: string: STRING
   77: bool: BOOLEAN
   78: maybe_empty_name_chain: NAME LPAREN
   79: pattern: LPAREN
