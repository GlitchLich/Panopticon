State 0:
          main ::= * in
      (1) in ::= *
          in ::= * in NEWLINE
          in ::= * in start NEWLINE
          in ::= * error
          error ::= * OPENQUOTEERROR

                OPENQUOTEERROR shift  98
                         error shift  99
                          main accept
                            in shift  1
                     {default} reduce 1

State 1:
      (0) main ::= in *
          in ::= in * NEWLINE
          in ::= in * start NEWLINE
          start ::= * spec
          spec ::= * assignment
          spec ::= * top_stmt
          top_stmt ::= * stmt
          stmt ::= * expr
          name_chain ::= * name_chain NAME
          name_chain ::= * NAME
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          spec ::= * case_statement
          spec ::= * guard_statement
          spec ::= * final_guard_statement
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          assignment ::= * name_chain ASSIGN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                             $ reduce 0
                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                       NEWLINE shift  120
                          NAME shift  77
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  59
                         start shift  97
                          spec shift  118
                    assignment shift  117
                      top_stmt shift  116
                          stmt shift  115
                    name_chain shift  78
                 function_call shift  114
                case_statement shift  76
               guard_statement shift  72
         final_guard_statement shift  80
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 2:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          stmt_list ::= * stmt
          stmt_list ::= * stmt_list stmt
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          array ::= OPENBRAC * maybe_empty_stmt_list RBRAC
     (35) maybe_empty_stmt_list ::= *
          maybe_empty_stmt_list ::= * stmt_list
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  59
                          stmt shift  109
                 function_call shift  114
                     stmt_list shift  5
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
         maybe_empty_stmt_list shift  88
                           num shift  107
                        string shift  106
                          bool shift  105
                     {default} reduce 35

State 3:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= NAME LPAREN * stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          stmt_list ::= * stmt
          stmt_list ::= * stmt_list stmt
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  59
                          stmt shift  109
                 function_call shift  114
                     stmt_list shift  4
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 4:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= NAME LPAREN stmt_list * RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          stmt_list ::= stmt_list * stmt
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                        RPAREN shift  113
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  59
                          stmt shift  108
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 5:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          stmt_list ::= stmt_list * stmt
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
     (36) maybe_empty_stmt_list ::= stmt_list *
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  59
                          stmt shift  108
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105
                     {default} reduce 36

State 6:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          assignment ::= name_chain ASSIGN * expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  49
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 7:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          final_guard_statement ::= guard_statement WILDCARD ASSIGN * expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  50
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 8:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= guard_statement WILDCARD_N ASSIGN * expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  51
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 9:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          guard_statement ::= guard_statement GUARD_S expr ASSIGN * expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  52
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 10:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          guard_statement ::= guard_statement GUARD_S * expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  43
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 11:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          case_statement ::= case_statement WILDCARD_N POINTER * expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  53
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 12:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= NOT * expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  89
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 13:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  90
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 14:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  62
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 15:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  63
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 16:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= expr SHIFTR * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  70
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 17:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= expr SHIFTL * expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  71
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 18:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= expr OR * expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  60
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 19:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= expr AND * expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  61
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 20:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= expr GORE * expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  66
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 21:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= expr LORE * expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  67
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 22:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= expr GREATERTHAN * expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  68
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 23:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= expr LESSTHAN * expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  69
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 24:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= expr NOTEQUALTO * expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  64
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 25:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= expr EQUALTO * expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  65
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 26:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  91
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 27:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= expr POW * expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  87
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 28:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= LET NAME ASSIGN expr IN * expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  54
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 29:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= LET NAME ASSIGN * expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  44
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 30:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= expr MODULO * expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  86
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 31:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= case_statement N_TAB expr POINTER * expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  55
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 32:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= case_statement N_TAB * expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  45
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 33:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= expr TIMES * expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  84
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 34:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= GUARD_S expr ASSIGN * expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  56
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 35:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= GUARD_S * expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  46
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 36:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  83
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 37:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= guard_statement GUARD_N expr ASSIGN * expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  57
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 38:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= guard_statement GUARD_N * expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  47
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 39:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  74
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 40:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= GUARD_N expr ASSIGN * expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  58
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 41:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= GUARD_N * expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  48
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 42:
          expr ::= * NAME
          expr ::= * function_call
          function_call ::= * NAME LPAREN stmt_list RPAREN
          guard_statement ::= * GUARD_N expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_N expr ASSIGN expr
          guard_statement ::= * GUARD_S expr ASSIGN expr
          guard_statement ::= * guard_statement GUARD_S expr ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD_N ASSIGN expr
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr
          expr ::= * guard_statement
          expr ::= * final_guard_statement
          case_statement ::= * CASE NAME OF
          case_statement ::= * case_statement N_TAB expr POINTER expr
          case_statement ::= * case_statement WILDCARD_N POINTER expr
          expr ::= * case_statement
          expr ::= * LET NAME ASSIGN expr IN expr
          expr ::= * array
          array ::= * OPENBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr

                         MINUS shift  13
                           NOT shift  12
                        BITNOT shift  26
                          NAME shift  96
                       GUARD_N shift  41
                       GUARD_S shift  35
                          CASE shift  95
                           LET shift  93
                      OPENBRAC shift  2
                           NUM shift  104
                        STRING shift  103
                       BOOLEAN shift  102
                          expr shift  73
                 function_call shift  114
                case_statement shift  79
               guard_statement shift  75
         final_guard_statement shift  112
                         array shift  110
                           num shift  107
                        string shift  106
                          bool shift  105

State 43:
          guard_statement ::= guard_statement GUARD_S expr * ASSIGN expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        ASSIGN shift  9
                            OR shift  18
                           AND shift  19
                        BITXOR shift  14
                        BITAND shift  15
                       EQUALTO shift  25
                    NOTEQUALTO shift  24
                   GREATERTHAN shift  22
                          GORE shift  20
                      LESSTHAN shift  23
                          LORE shift  21
                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27

State 44:
          expr ::= LET NAME ASSIGN expr * IN expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  18
                           AND shift  19
                        BITXOR shift  14
                        BITAND shift  15
                       EQUALTO shift  25
                    NOTEQUALTO shift  24
                   GREATERTHAN shift  22
                          GORE shift  20
                      LESSTHAN shift  23
                          LORE shift  21
                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                            IN shift  28

State 45:
          case_statement ::= case_statement N_TAB expr * POINTER expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  18
                           AND shift  19
                        BITXOR shift  14
                        BITAND shift  15
                       EQUALTO shift  25
                    NOTEQUALTO shift  24
                   GREATERTHAN shift  22
                          GORE shift  20
                      LESSTHAN shift  23
                          LORE shift  21
                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                       POINTER shift  31

State 46:
          guard_statement ::= GUARD_S expr * ASSIGN expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        ASSIGN shift  34
                            OR shift  18
                           AND shift  19
                        BITXOR shift  14
                        BITAND shift  15
                       EQUALTO shift  25
                    NOTEQUALTO shift  24
                   GREATERTHAN shift  22
                          GORE shift  20
                      LESSTHAN shift  23
                          LORE shift  21
                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27

State 47:
          guard_statement ::= guard_statement GUARD_N expr * ASSIGN expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        ASSIGN shift  37
                            OR shift  18
                           AND shift  19
                        BITXOR shift  14
                        BITAND shift  15
                       EQUALTO shift  25
                    NOTEQUALTO shift  24
                   GREATERTHAN shift  22
                          GORE shift  20
                      LESSTHAN shift  23
                          LORE shift  21
                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27

State 48:
          guard_statement ::= GUARD_N expr * ASSIGN expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        ASSIGN shift  40
                            OR shift  18
                           AND shift  19
                        BITXOR shift  14
                        BITAND shift  15
                       EQUALTO shift  25
                    NOTEQUALTO shift  24
                   GREATERTHAN shift  22
                          GORE shift  20
                      LESSTHAN shift  23
                          LORE shift  21
                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27

State 49:
     (30) assignment ::= name_chain ASSIGN expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  18
                           AND shift  19
                        BITXOR shift  14
                        BITAND shift  15
                       EQUALTO shift  25
                    NOTEQUALTO shift  24
                   GREATERTHAN shift  22
                          GORE shift  20
                      LESSTHAN shift  23
                          LORE shift  21
                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 30

State 50:
     (22) final_guard_statement ::= guard_statement WILDCARD ASSIGN expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  18
                           AND shift  19
                        BITXOR shift  14
                        BITAND shift  15
                       EQUALTO shift  25
                    NOTEQUALTO shift  24
                   GREATERTHAN shift  22
                          GORE shift  20
                      LESSTHAN shift  23
                          LORE shift  21
                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 22

State 51:
     (21) final_guard_statement ::= guard_statement WILDCARD_N ASSIGN expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  18
                           AND shift  19
                        BITXOR shift  14
                        BITAND shift  15
                       EQUALTO shift  25
                    NOTEQUALTO shift  24
                   GREATERTHAN shift  22
                          GORE shift  20
                      LESSTHAN shift  23
                          LORE shift  21
                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 21

State 52:
     (20) guard_statement ::= guard_statement GUARD_S expr ASSIGN expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  18
                           AND shift  19
                        BITXOR shift  14
                        BITAND shift  15
                       EQUALTO shift  25
                    NOTEQUALTO shift  24
                   GREATERTHAN shift  22
                          GORE shift  20
                      LESSTHAN shift  23
                          LORE shift  21
                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 20

State 53:
     (27) case_statement ::= case_statement WILDCARD_N POINTER expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  18
                           AND shift  19
                        BITXOR shift  14
                        BITAND shift  15
                       EQUALTO shift  25
                    NOTEQUALTO shift  24
                   GREATERTHAN shift  22
                          GORE shift  20
                      LESSTHAN shift  23
                          LORE shift  21
                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 27

State 54:
     (29) expr ::= LET NAME ASSIGN expr IN expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  18
                           AND shift  19
                        BITXOR shift  14
                        BITAND shift  15
                       EQUALTO shift  25
                    NOTEQUALTO shift  24
                   GREATERTHAN shift  22
                          GORE shift  20
                      LESSTHAN shift  23
                          LORE shift  21
                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 29

State 55:
     (26) case_statement ::= case_statement N_TAB expr POINTER expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  18
                           AND shift  19
                        BITXOR shift  14
                        BITAND shift  15
                       EQUALTO shift  25
                    NOTEQUALTO shift  24
                   GREATERTHAN shift  22
                          GORE shift  20
                      LESSTHAN shift  23
                          LORE shift  21
                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 26

State 56:
     (19) guard_statement ::= GUARD_S expr ASSIGN expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  18
                           AND shift  19
                        BITXOR shift  14
                        BITAND shift  15
                       EQUALTO shift  25
                    NOTEQUALTO shift  24
                   GREATERTHAN shift  22
                          GORE shift  20
                      LESSTHAN shift  23
                          LORE shift  21
                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 19

State 57:
     (18) guard_statement ::= guard_statement GUARD_N expr ASSIGN expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  18
                           AND shift  19
                        BITXOR shift  14
                        BITAND shift  15
                       EQUALTO shift  25
                    NOTEQUALTO shift  24
                   GREATERTHAN shift  22
                          GORE shift  20
                      LESSTHAN shift  23
                          LORE shift  21
                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 18

State 58:
     (17) guard_statement ::= GUARD_N expr ASSIGN expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  18
                           AND shift  19
                        BITXOR shift  14
                        BITAND shift  15
                       EQUALTO shift  25
                    NOTEQUALTO shift  24
                   GREATERTHAN shift  22
                          GORE shift  20
                      LESSTHAN shift  23
                          LORE shift  21
                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 17

State 59:
      (8) stmt ::= expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  18
                           AND shift  19
                        BITXOR shift  14
                        BITAND shift  15
                       EQUALTO shift  25
                    NOTEQUALTO shift  24
                   GREATERTHAN shift  22
                          GORE shift  20
                      LESSTHAN shift  23
                          LORE shift  21
                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                         MINUS reduce 8   ** Parsing conflict **
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 8

State 60:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
     (56) expr ::= expr OR expr *
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           AND shift  19
                        BITXOR shift  14
                        BITAND shift  15
                       EQUALTO shift  25
                    NOTEQUALTO shift  24
                   GREATERTHAN shift  22
                          GORE shift  20
                      LESSTHAN shift  23
                          LORE shift  21
                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 56

State 61:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
     (55) expr ::= expr AND expr *
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        BITXOR shift  14
                        BITAND shift  15
                       EQUALTO shift  25
                    NOTEQUALTO shift  24
                   GREATERTHAN shift  22
                          GORE shift  20
                      LESSTHAN shift  23
                          LORE shift  21
                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 55

State 62:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr
     (63) expr ::= expr BITXOR expr *

                        BITAND shift  15
                       EQUALTO shift  25
                    NOTEQUALTO shift  24
                   GREATERTHAN shift  22
                          GORE shift  20
                      LESSTHAN shift  23
                          LORE shift  21
                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 63

State 63:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
     (62) expr ::= expr BITAND expr *
          expr ::= expr * BITXOR expr

                       EQUALTO shift  25
                    NOTEQUALTO shift  24
                   GREATERTHAN shift  22
                          GORE shift  20
                      LESSTHAN shift  23
                          LORE shift  21
                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 62

State 64:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
     (50) expr ::= expr NOTEQUALTO expr *
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   GREATERTHAN shift  22
                          GORE shift  20
                      LESSTHAN shift  23
                          LORE shift  21
                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 50

State 65:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
     (49) expr ::= expr EQUALTO expr *
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   GREATERTHAN shift  22
                          GORE shift  20
                      LESSTHAN shift  23
                          LORE shift  21
                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 49

State 66:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
     (54) expr ::= expr GORE expr *
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 54

State 67:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
     (53) expr ::= expr LORE expr *
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 53

State 68:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
     (52) expr ::= expr GREATERTHAN expr *
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 52

State 69:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
     (51) expr ::= expr LESSTHAN expr *
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        SHIFTL shift  17
                        SHIFTR shift  16
                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 51

State 70:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
     (61) expr ::= expr SHIFTR expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 61

State 71:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
     (60) expr ::= expr SHIFTL expr *
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                          PLUS shift  42
                         MINUS shift  39
                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 60

State 72:
     (15) spec ::= guard_statement *
          guard_statement ::= guard_statement * GUARD_N expr ASSIGN expr
          guard_statement ::= guard_statement * GUARD_S expr ASSIGN expr
          final_guard_statement ::= guard_statement * WILDCARD_N ASSIGN expr
          final_guard_statement ::= guard_statement * WILDCARD ASSIGN expr
     (23) expr ::= guard_statement *

                       NEWLINE reduce 15
                       NEWLINE reduce 23  ** Parsing conflict **
                       GUARD_N shift  38
                       GUARD_S shift  10
                    WILDCARD_N shift  82
                      WILDCARD shift  81
                     {default} reduce 23

State 73:
          expr ::= expr * PLUS expr
     (43) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 43

State 74:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (44) expr ::= expr MINUS expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  36
                         TIMES shift  33
                        MODULO shift  30
                           POW shift  27
                     {default} reduce 44

State 75:
          guard_statement ::= guard_statement * GUARD_N expr ASSIGN expr
          guard_statement ::= guard_statement * GUARD_S expr ASSIGN expr
          final_guard_statement ::= guard_statement * WILDCARD_N ASSIGN expr
          final_guard_statement ::= guard_statement * WILDCARD ASSIGN expr
     (23) expr ::= guard_statement *

                       GUARD_N shift  38
                       GUARD_N reduce 23  ** Parsing conflict **
                       GUARD_S shift  10
                       GUARD_S reduce 23  ** Parsing conflict **
                    WILDCARD_N shift  82
                    WILDCARD_N reduce 23  ** Parsing conflict **
                      WILDCARD shift  81
                      WILDCARD reduce 23  ** Parsing conflict **
                     {default} reduce 23

State 76:
     (14) spec ::= case_statement *
          case_statement ::= case_statement * N_TAB expr POINTER expr
          case_statement ::= case_statement * WILDCARD_N POINTER expr
     (28) expr ::= case_statement *

                       NEWLINE reduce 14
                       NEWLINE reduce 28  ** Parsing conflict **
                    WILDCARD_N shift  85
                         N_TAB shift  32
                     {default} reduce 28

State 77:
     (10) name_chain ::= NAME *
     (11) expr ::= NAME *
          function_call ::= NAME * LPAREN stmt_list RPAREN

                        ASSIGN reduce 10
                        LPAREN shift  3
                          NAME reduce 10
                     {default} reduce 11

State 78:
          name_chain ::= name_chain * NAME
          assignment ::= name_chain * ASSIGN expr

                        ASSIGN shift  6
                          NAME shift  100

State 79:
          case_statement ::= case_statement * N_TAB expr POINTER expr
          case_statement ::= case_statement * WILDCARD_N POINTER expr
     (28) expr ::= case_statement *

                    WILDCARD_N shift  85
                    WILDCARD_N reduce 28  ** Parsing conflict **
                         N_TAB shift  32
                         N_TAB reduce 28  ** Parsing conflict **
                     {default} reduce 28

State 80:
     (16) spec ::= final_guard_statement *
     (24) expr ::= final_guard_statement *

                       NEWLINE reduce 16
                       NEWLINE reduce 24  ** Parsing conflict **
                     {default} reduce 24

State 81:
          final_guard_statement ::= guard_statement WILDCARD * ASSIGN expr

                        ASSIGN shift  7

State 82:
          final_guard_statement ::= guard_statement WILDCARD_N * ASSIGN expr

                        ASSIGN shift  8

State 83:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
     (45) expr ::= expr DIVIDE expr *
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  27
                     {default} reduce 45

State 84:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
     (46) expr ::= expr TIMES expr *
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  27
                     {default} reduce 46

State 85:
          case_statement ::= case_statement WILDCARD_N * POINTER expr

                       POINTER shift  11

State 86:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
     (47) expr ::= expr MODULO expr *
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  27
                     {default} reduce 47

State 87:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
     (48) expr ::= expr POW expr *
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  27
                     {default} reduce 48

State 88:
          array ::= OPENBRAC maybe_empty_stmt_list * RBRAC

                         RBRAC shift  101

State 89:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
     (59) expr ::= NOT expr *
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  27
                     {default} reduce 59

State 90:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
     (58) expr ::= MINUS expr *
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  27
                     {default} reduce 58

State 91:
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
     (57) expr ::= BITNOT expr *
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  27
                     {default} reduce 57

State 92:
          expr ::= LET NAME * ASSIGN expr IN expr

                        ASSIGN shift  29

State 93:
          expr ::= LET * NAME ASSIGN expr IN expr

                          NAME shift  92

State 94:
          case_statement ::= CASE NAME * OF

                            OF shift  111

State 95:
          case_statement ::= CASE * NAME OF

                          NAME shift  94

State 96:
     (11) expr ::= NAME *
          function_call ::= NAME * LPAREN stmt_list RPAREN

                        LPAREN shift  3
                     {default} reduce 11

State 97:
          in ::= in start * NEWLINE

                       NEWLINE shift  119

State 98:
     (65) error ::= OPENQUOTEERROR *

                     {default} reduce 65

State 99:
     (64) in ::= error *

                     {default} reduce 64

State 100:
      (9) name_chain ::= name_chain NAME *

                     {default} reduce 9

State 101:
     (34) array ::= OPENBRAC maybe_empty_stmt_list RBRAC *

                     {default} reduce 34

State 102:
     (42) bool ::= BOOLEAN *

                     {default} reduce 42

State 103:
     (41) string ::= STRING *

                     {default} reduce 41

State 104:
     (40) num ::= NUM *

                     {default} reduce 40

State 105:
     (39) expr ::= bool *

                     {default} reduce 39

State 106:
     (38) expr ::= string *

                     {default} reduce 38

State 107:
     (37) expr ::= num *

                     {default} reduce 37

State 108:
     (32) stmt_list ::= stmt_list stmt *

                     {default} reduce 32

State 109:
     (31) stmt_list ::= stmt *

                     {default} reduce 31

State 110:
     (33) expr ::= array *

                     {default} reduce 33

State 111:
     (25) case_statement ::= CASE NAME OF *

                     {default} reduce 25

State 112:
     (24) expr ::= final_guard_statement *

                     {default} reduce 24

State 113:
     (13) function_call ::= NAME LPAREN stmt_list RPAREN *

                     {default} reduce 13

State 114:
     (12) expr ::= function_call *

                     {default} reduce 12

State 115:
      (7) top_stmt ::= stmt *

                     {default} reduce 7

State 116:
      (6) spec ::= top_stmt *

                     {default} reduce 6

State 117:
      (5) spec ::= assignment *

                     {default} reduce 5

State 118:
      (4) start ::= spec *

                     {default} reduce 4

State 119:
      (3) in ::= in start NEWLINE *

                     {default} reduce 3

State 120:
      (2) in ::= in NEWLINE *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: ASSIGN
    2: BITOR
    3: FUNCTION_DEC
    4: INDEX
    5: OR
    6: AND
    7: BITXOR
    8: BITAND
    9: EQUALTO
   10: NOTEQUALTO
   11: GREATERTHAN
   12: GORE
   13: LESSTHAN
   14: LORE
   15: SHIFTL
   16: SHIFTR
   17: PLUS
   18: MINUS
   19: DIVIDE
   20: TIMES
   21: MODULO
   22: POW
   23: NOT
   24: BITNOT
   25: UMINUS
   26: PLUSPLUS
   27: LPAREN
   28: RPAREN
   29: COMMA
   30: LBRAC
   31: RBRAC
   32: COLLECTARRAY
   33: NEWLINE
   34: NAME
   35: GUARD_N
   36: GUARD_S
   37: WILDCARD_N
   38: WILDCARD
   39: CASE
   40: OF
   41: N_TAB
   42: POINTER
   43: LET
   44: IN
   45: OPENBRAC
   46: NUM
   47: STRING
   48: BOOLEAN
   49: OPENQUOTEERROR
   50: error: OPENQUOTEERROR
   51: expr: MINUS NOT BITNOT NAME GUARD_N GUARD_S CASE LET OPENBRAC NUM STRING BOOLEAN
   52: id:
   53: main: <lambda> MINUS NOT BITNOT NEWLINE NAME GUARD_N GUARD_S CASE LET OPENBRAC NUM STRING BOOLEAN OPENQUOTEERROR
   54: in: <lambda> MINUS NOT BITNOT NEWLINE NAME GUARD_N GUARD_S CASE LET OPENBRAC NUM STRING BOOLEAN OPENQUOTEERROR
   55: start: MINUS NOT BITNOT NAME GUARD_N GUARD_S CASE LET OPENBRAC NUM STRING BOOLEAN
   56: spec: MINUS NOT BITNOT NAME GUARD_N GUARD_S CASE LET OPENBRAC NUM STRING BOOLEAN
   57: assignment: NAME
   58: top_stmt: MINUS NOT BITNOT NAME GUARD_N GUARD_S CASE LET OPENBRAC NUM STRING BOOLEAN
   59: stmt: MINUS NOT BITNOT NAME GUARD_N GUARD_S CASE LET OPENBRAC NUM STRING BOOLEAN
   60: name_chain: NAME
   61: function_call: NAME
   62: stmt_list: MINUS NOT BITNOT NAME GUARD_N GUARD_S CASE LET OPENBRAC NUM STRING BOOLEAN
   63: case_statement: CASE
   64: guard_statement: GUARD_N GUARD_S
   65: final_guard_statement: GUARD_N GUARD_S
   66: array: OPENBRAC
   67: maybe_empty_stmt_list: <lambda> MINUS NOT BITNOT NAME GUARD_N GUARD_S CASE LET OPENBRAC NUM STRING BOOLEAN
   68: num: NUM
   69: string: STRING
   70: bool: BOOLEAN
