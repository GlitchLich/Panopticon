State 0:
          main ::= * in
      (1) in ::= *
          in ::= * in DELIMITER
          in ::= * in start DELIMITER
          in ::= * in test DELIMITER
          in ::= * error
          error ::= * OPENQUOTEERROR

                OPENQUOTEERROR shift  119
                         error shift  120
                          main accept
                            in shift  1
                     {default} reduce 1

State 1:
      (0) main ::= in *
          in ::= in * DELIMITER
          in ::= in * start DELIMITER
          in ::= in * test DELIMITER
          start ::= * spec
          spec ::= * assignment
          spec ::= * top_stmt
          top_stmt ::= * stmt
          stmt ::= * expr
          name_chain ::= * name_chain NAME
          name_chain ::= * NAME
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          test ::= * case_statement
          guard_statement ::= * name_chain LCURL BITOR expr ASSIGN expr DELIMITER
          guard_statement ::= * guard_statement BITOR expr ASSIGN expr DELIMITER
          final_guard_statement ::= * guard_statement BITOR expr ASSIGN expr RCURL
          final_guard_statement ::= * guard_statement WILDCARD ASSIGN expr RCURL
          assignment ::= * final_guard_statement
          assignment ::= * guard_statement BITOR expr ASSIGN expr DELIMITER final_where_statement
          assignment ::= * guard_statement WILDCARD ASSIGN expr DELIMITER final_where_statement
          case_statement ::= * name_chain ASSIGN CASE expr OF
          test ::= * LET IN
          assignment ::= * name_chain ASSIGN expr
          assignment ::= * name_chain ASSIGN expr LCURL final_where_statement
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          name_chain ::= * name_chain pattern_argument
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                             $ reduce 0
                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                     DELIMITER shift  166
                          NAME shift  88
                           LET shift  102
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  72
                         start shift  118
                          test shift  117
                          spec shift  163
                    assignment shift  162
                      top_stmt shift  161
                          stmt shift  160
                    name_chain shift  52
                 function_call shift  115
                   array_index shift  100
                case_statement shift  127
               guard_statement shift  91
         final_guard_statement shift  122
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 2:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          stmt_list ::= * stmt
          stmt_list ::= * stmt_list stmt
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          array ::= LBRAC * maybe_empty_stmt_list RBRAC
     (41) maybe_empty_stmt_list ::= *
          maybe_empty_stmt_list ::= * stmt_list
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  72
                          stmt shift  155
                 function_call shift  115
                     stmt_list shift  9
                   array_index shift  100
                         array shift  156
         maybe_empty_stmt_list shift  113
                           num shift  154
                        string shift  153
                          bool shift  152
                     {default} reduce 41

State 3:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          expr ::= array_index LPAREN * stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          function_call ::= array_index LPAREN * RPAREN
          expr ::= * function_call
          stmt_list ::= * stmt
          stmt_list ::= * stmt_list stmt
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                        RPAREN shift  144
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  72
                          stmt shift  155
                 function_call shift  115
                     stmt_list shift  7
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 4:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= NAME LPAREN * stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= NAME LPAREN * RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          stmt_list ::= * stmt
          stmt_list ::= * stmt_list stmt
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                        RPAREN shift  142
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  72
                          stmt shift  155
                 function_call shift  115
                     stmt_list shift  8
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 5:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          function_call ::= NAME LBRAC RBRAC LPAREN * stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          stmt_list ::= * stmt
          stmt_list ::= * stmt_list stmt
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  72
                          stmt shift  155
                 function_call shift  115
                     stmt_list shift  6
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 6:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          function_call ::= NAME LBRAC RBRAC LPAREN stmt_list * RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          stmt_list ::= stmt_list * stmt
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                        RPAREN shift  140
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  72
                          stmt shift  157
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 7:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          expr ::= array_index LPAREN stmt_list * RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          stmt_list ::= stmt_list * stmt
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                        RPAREN shift  158
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  72
                          stmt shift  157
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 8:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= NAME LPAREN stmt_list * RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          stmt_list ::= stmt_list * stmt
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                        RPAREN shift  159
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  72
                          stmt shift  157
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 9:
          stmt ::= * expr
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          stmt_list ::= stmt_list * stmt
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
     (42) maybe_empty_stmt_list ::= stmt_list *
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  72
                          stmt shift  157
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152
                     {default} reduce 42

State 10:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          case_statement ::= name_chain ASSIGN * CASE expr OF
          assignment ::= name_chain ASSIGN * expr
          assignment ::= name_chain ASSIGN * expr LCURL final_where_statement
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                          CASE shift  16
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  63
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 11:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          function_call ::= NAME LBRAC * RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= NAME LBRAC * expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                         RBRAC shift  112
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  67
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 12:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= LPAREN * MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                         MINUS shift  22
                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  70
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 13:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          final_guard_statement ::= guard_statement WILDCARD ASSIGN * expr RCURL
          assignment ::= guard_statement WILDCARD ASSIGN * expr DELIMITER final_where_statement
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  57
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 14:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          guard_statement ::= guard_statement BITOR expr ASSIGN * expr DELIMITER
          final_guard_statement ::= guard_statement BITOR expr ASSIGN * expr RCURL
          assignment ::= guard_statement BITOR expr ASSIGN * expr DELIMITER final_where_statement
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  58
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 15:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          guard_statement ::= guard_statement BITOR * expr ASSIGN expr DELIMITER
          final_guard_statement ::= guard_statement BITOR * expr ASSIGN expr RCURL
          assignment ::= guard_statement BITOR * expr ASSIGN expr DELIMITER final_where_statement
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  60
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 16:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          case_statement ::= name_chain ASSIGN CASE * expr OF
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  61
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 17:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          where_statement ::= where_statement name_chain ASSIGN * expr DELIMITER
          final_where_statement ::= where_statement name_chain ASSIGN * expr RCURL DELIMITER RCURL
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  59
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 18:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          where_statement ::= WHERE name_chain ASSIGN * expr LCURL
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  62
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 19:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          guard_statement ::= name_chain LCURL BITOR expr ASSIGN * expr DELIMITER
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  64
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 20:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          guard_statement ::= name_chain LCURL BITOR * expr ASSIGN expr DELIMITER
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  65
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 21:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          array_index ::= array_index LBRAC * expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  68
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 22:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= LPAREN MINUS * expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  69
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 23:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= NOT * expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  94
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 24:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  95
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 25:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  78
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 26:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  79
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 27:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= expr SHIFTR * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  86
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 28:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= expr SHIFTL * expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  87
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 29:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= expr OR * expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  76
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 30:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= expr AND * expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  77
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 31:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= expr GORE * expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  82
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 32:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= expr LORE * expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  83
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 33:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= expr GREATERTHAN * expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  84
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 34:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= expr LESSTHAN * expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  85
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 35:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= expr NOTEQUALTO * expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  80
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 36:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= expr EQUALTO * expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  81
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 37:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= expr POW * expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  96
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 38:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= expr MODULO * expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  97
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 39:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= expr TIMES * expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  98
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 40:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  99
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 41:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  89
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 42:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  90
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 43:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= expr PLUSPLUS * expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  74
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 44:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= expr APPEND * expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  75
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 45:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= expr PREPEND * expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  73
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 46:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= PRINT LPAREN * expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  71
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 47:
          expr ::= * NAME
          expr ::= * expr COMPOSITION function_call
          expr ::= * expr COMPOSITION NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          expr ::= * array_index LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          expr ::= * function_call
          expr ::= * array
          array ::= * LBRAC maybe_empty_stmt_list RBRAC
          expr ::= * num
          expr ::= * string
          expr ::= * bool
          expr ::= * PRINT LPAREN expr RPAREN
          expr ::= * LPAREN expr RPAREN
          num ::= * NUM
          string ::= * STRING
          bool ::= * BOOLEAN
          expr ::= * expr PREPEND expr
          expr ::= * expr APPEND expr
          expr ::= * expr PLUSPLUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr TIMES expr
          expr ::= * expr MODULO expr
          expr ::= * expr POW expr
          expr ::= * expr EQUALTO expr
          expr ::= * expr NOTEQUALTO expr
          expr ::= * expr LESSTHAN expr
          expr ::= * expr GREATERTHAN expr
          expr ::= * expr LORE expr
          expr ::= * expr GORE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * BITNOT expr
          expr ::= * LPAREN MINUS expr RPAREN
          expr ::= * NOT expr
          expr ::= * expr SHIFTL expr
          expr ::= * expr SHIFTR expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITXOR expr
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= function_call LBRAC * expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC
          expr ::= * array_index

                           NOT shift  23
                        BITNOT shift  24
                        LPAREN shift  12
                         LBRAC shift  2
                          NAME shift  101
                         PRINT shift  114
                           NUM shift  149
                        STRING shift  148
                       BOOLEAN shift  147
                          expr shift  66
                 function_call shift  115
                   array_index shift  100
                         array shift  156
                           num shift  154
                        string shift  153
                          bool shift  152

State 48:
          assignment ::= guard_statement WILDCARD ASSIGN expr DELIMITER * final_where_statement
          where_statement ::= * WHERE LCURL
          where_statement ::= * WHERE name_chain ASSIGN expr LCURL
          where_statement ::= * where_statement name_chain ASSIGN expr DELIMITER
          final_where_statement ::= * where_statement name_chain ASSIGN expr RCURL DELIMITER RCURL

                         WHERE shift  55
         final_where_statement shift  123
               where_statement shift  56

State 49:
     (23) guard_statement ::= guard_statement BITOR expr ASSIGN expr DELIMITER *
          assignment ::= guard_statement BITOR expr ASSIGN expr DELIMITER * final_where_statement
          where_statement ::= * WHERE LCURL
          where_statement ::= * WHERE name_chain ASSIGN expr LCURL
          where_statement ::= * where_statement name_chain ASSIGN expr DELIMITER
          final_where_statement ::= * where_statement name_chain ASSIGN expr RCURL DELIMITER RCURL

                         WHERE shift  55
         final_where_statement shift  126
               where_statement shift  56
                     {default} reduce 23

State 50:
          where_statement ::= * WHERE LCURL
          where_statement ::= * WHERE name_chain ASSIGN expr LCURL
          where_statement ::= * where_statement name_chain ASSIGN expr DELIMITER
          final_where_statement ::= * where_statement name_chain ASSIGN expr RCURL DELIMITER RCURL
          assignment ::= name_chain ASSIGN expr LCURL * final_where_statement

                         WHERE shift  55
         final_where_statement shift  129
               where_statement shift  56

State 51:
          expr ::= expr COMPOSITION * function_call
          expr ::= expr COMPOSITION * NAME
          function_call ::= * NAME LPAREN stmt_list RPAREN
          function_call ::= * NAME LBRAC RBRAC LPAREN stmt_list RPAREN
          function_call ::= * NAME LPAREN RPAREN
          function_call ::= * array_index LPAREN RPAREN
          array_index ::= * function_call LBRAC expr RBRAC
          array_index ::= * NAME LBRAC expr RBRAC
          array_index ::= * array_index LBRAC expr RBRAC

                          NAME shift  93
                 function_call shift  116
                   array_index shift  92

State 52:
          name_chain ::= name_chain * NAME
          guard_statement ::= name_chain * LCURL BITOR expr ASSIGN expr DELIMITER
          case_statement ::= name_chain * ASSIGN CASE expr OF
          assignment ::= name_chain * ASSIGN expr
          assignment ::= name_chain * ASSIGN expr LCURL final_where_statement
          name_chain ::= name_chain * pattern_argument
          pattern_argument ::= * LPAREN NAME COLON NAME RPAREN

                        ASSIGN shift  10
                        LPAREN shift  109
                          NAME shift  138
                         LCURL shift  110
              pattern_argument shift  135

State 53:
          name_chain ::= name_chain * NAME
          where_statement ::= where_statement name_chain * ASSIGN expr DELIMITER
          final_where_statement ::= where_statement name_chain * ASSIGN expr RCURL DELIMITER RCURL
          name_chain ::= name_chain * pattern_argument
          pattern_argument ::= * LPAREN NAME COLON NAME RPAREN

                        ASSIGN shift  17
                        LPAREN shift  109
                          NAME shift  138
              pattern_argument shift  135

State 54:
          name_chain ::= name_chain * NAME
          where_statement ::= WHERE name_chain * ASSIGN expr LCURL
          name_chain ::= name_chain * pattern_argument
          pattern_argument ::= * LPAREN NAME COLON NAME RPAREN

                        ASSIGN shift  18
                        LPAREN shift  109
                          NAME shift  138
              pattern_argument shift  135

State 55:
          name_chain ::= * name_chain NAME
          name_chain ::= * NAME
          where_statement ::= WHERE * LCURL
          where_statement ::= WHERE * name_chain ASSIGN expr LCURL
          name_chain ::= * name_chain pattern_argument

                          NAME shift  133
                         LCURL shift  132
                    name_chain shift  54

State 56:
          name_chain ::= * name_chain NAME
          name_chain ::= * NAME
          where_statement ::= where_statement * name_chain ASSIGN expr DELIMITER
          final_where_statement ::= where_statement * name_chain ASSIGN expr RCURL DELIMITER RCURL
          name_chain ::= * name_chain pattern_argument

                          NAME shift  133
                    name_chain shift  53

State 57:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          final_guard_statement ::= guard_statement WILDCARD ASSIGN expr * RCURL
          assignment ::= guard_statement WILDCARD ASSIGN expr * DELIMITER final_where_statement
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  51
                       PREPEND shift  45
                        APPEND shift  44
                            OR shift  29
                           AND shift  30
                        BITXOR shift  25
                        BITAND shift  26
                       EQUALTO shift  36
                    NOTEQUALTO shift  35
                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                     DELIMITER shift  48
                         RCURL shift  124

State 58:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          guard_statement ::= guard_statement BITOR expr ASSIGN expr * DELIMITER
          final_guard_statement ::= guard_statement BITOR expr ASSIGN expr * RCURL
          assignment ::= guard_statement BITOR expr ASSIGN expr * DELIMITER final_where_statement
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  51
                       PREPEND shift  45
                        APPEND shift  44
                            OR shift  29
                           AND shift  30
                        BITXOR shift  25
                        BITAND shift  26
                       EQUALTO shift  36
                    NOTEQUALTO shift  35
                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                     DELIMITER shift  49
                         RCURL shift  125

State 59:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          where_statement ::= where_statement name_chain ASSIGN expr * DELIMITER
          final_where_statement ::= where_statement name_chain ASSIGN expr * RCURL DELIMITER RCURL
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  51
                       PREPEND shift  45
                        APPEND shift  44
                            OR shift  29
                           AND shift  30
                        BITXOR shift  25
                        BITAND shift  26
                       EQUALTO shift  36
                    NOTEQUALTO shift  35
                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                     DELIMITER shift  131
                         RCURL shift  105

State 60:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          guard_statement ::= guard_statement BITOR expr * ASSIGN expr DELIMITER
          final_guard_statement ::= guard_statement BITOR expr * ASSIGN expr RCURL
          assignment ::= guard_statement BITOR expr * ASSIGN expr DELIMITER final_where_statement
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        ASSIGN shift  14
                   COMPOSITION shift  51
                       PREPEND shift  45
                        APPEND shift  44
                            OR shift  29
                           AND shift  30
                        BITXOR shift  25
                        BITAND shift  26
                       EQUALTO shift  36
                    NOTEQUALTO shift  35
                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43

State 61:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          case_statement ::= name_chain ASSIGN CASE expr * OF
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  51
                       PREPEND shift  45
                        APPEND shift  44
                            OR shift  29
                           AND shift  30
                        BITXOR shift  25
                        BITAND shift  26
                       EQUALTO shift  36
                    NOTEQUALTO shift  35
                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                            OF shift  128

State 62:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          where_statement ::= WHERE name_chain ASSIGN expr * LCURL
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  51
                       PREPEND shift  45
                        APPEND shift  44
                            OR shift  29
                           AND shift  30
                        BITXOR shift  25
                        BITAND shift  26
                       EQUALTO shift  36
                    NOTEQUALTO shift  35
                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                         LCURL shift  136

State 63:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
     (35) assignment ::= name_chain ASSIGN expr *
          assignment ::= name_chain ASSIGN expr * LCURL final_where_statement
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  51
                       PREPEND shift  45
                        APPEND shift  44
                            OR shift  29
                           AND shift  30
                        BITXOR shift  25
                        BITAND shift  26
                       EQUALTO shift  36
                    NOTEQUALTO shift  35
                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                         LCURL shift  50
                     {default} reduce 35

State 64:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          guard_statement ::= name_chain LCURL BITOR expr ASSIGN expr * DELIMITER
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  51
                       PREPEND shift  45
                        APPEND shift  44
                            OR shift  29
                           AND shift  30
                        BITXOR shift  25
                        BITAND shift  26
                       EQUALTO shift  36
                    NOTEQUALTO shift  35
                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                     DELIMITER shift  137

State 65:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          guard_statement ::= name_chain LCURL BITOR expr * ASSIGN expr DELIMITER
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        ASSIGN shift  19
                   COMPOSITION shift  51
                       PREPEND shift  45
                        APPEND shift  44
                            OR shift  29
                           AND shift  30
                        BITXOR shift  25
                        BITAND shift  26
                       EQUALTO shift  36
                    NOTEQUALTO shift  35
                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43

State 66:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr
          array_index ::= function_call LBRAC expr * RBRAC

                   COMPOSITION shift  51
                       PREPEND shift  45
                        APPEND shift  44
                            OR shift  29
                           AND shift  30
                        BITXOR shift  25
                        BITAND shift  26
                       EQUALTO shift  36
                    NOTEQUALTO shift  35
                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                         RBRAC shift  139

State 67:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr
          array_index ::= NAME LBRAC expr * RBRAC

                   COMPOSITION shift  51
                       PREPEND shift  45
                        APPEND shift  44
                            OR shift  29
                           AND shift  30
                        BITXOR shift  25
                        BITAND shift  26
                       EQUALTO shift  36
                    NOTEQUALTO shift  35
                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                         RBRAC shift  141

State 68:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr
          array_index ::= array_index LBRAC expr * RBRAC

                   COMPOSITION shift  51
                       PREPEND shift  45
                        APPEND shift  44
                            OR shift  29
                           AND shift  30
                        BITXOR shift  25
                        BITAND shift  26
                       EQUALTO shift  36
                    NOTEQUALTO shift  35
                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                         RBRAC shift  143

State 69:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= LPAREN MINUS expr * RPAREN
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  51
                       PREPEND shift  45
                        APPEND shift  44
                            OR shift  29
                           AND shift  30
                        BITXOR shift  25
                        BITAND shift  26
                       EQUALTO shift  36
                    NOTEQUALTO shift  35
                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                        RPAREN shift  146

State 70:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  51
                       PREPEND shift  45
                        APPEND shift  44
                            OR shift  29
                           AND shift  30
                        BITXOR shift  25
                        BITAND shift  26
                       EQUALTO shift  36
                    NOTEQUALTO shift  35
                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                        RPAREN shift  150

State 71:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= PRINT LPAREN expr * RPAREN
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  51
                       PREPEND shift  45
                        APPEND shift  44
                            OR shift  29
                           AND shift  30
                        BITXOR shift  25
                        BITAND shift  26
                       EQUALTO shift  36
                    NOTEQUALTO shift  35
                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                        RPAREN shift  151

State 72:
      (9) stmt ::= expr *
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   COMPOSITION shift  51
                       PREPEND shift  45
                        APPEND shift  44
                            OR shift  29
                           AND shift  30
                        BITXOR shift  25
                        BITAND shift  26
                       EQUALTO shift  36
                    NOTEQUALTO shift  35
                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 9

State 73:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
     (53) expr ::= expr PREPEND expr *
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                       PREPEND shift  45
                        APPEND shift  44
                            OR shift  29
                           AND shift  30
                        BITXOR shift  25
                        BITAND shift  26
                       EQUALTO shift  36
                    NOTEQUALTO shift  35
                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 53

State 74:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
     (55) expr ::= expr PLUSPLUS expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  29
                           AND shift  30
                        BITXOR shift  25
                        BITAND shift  26
                       EQUALTO shift  36
                    NOTEQUALTO shift  35
                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 55

State 75:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
     (54) expr ::= expr APPEND expr *
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                            OR shift  29
                           AND shift  30
                        BITXOR shift  25
                        BITAND shift  26
                       EQUALTO shift  36
                    NOTEQUALTO shift  35
                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 54

State 76:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
     (69) expr ::= expr OR expr *
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           AND shift  30
                        BITXOR shift  25
                        BITAND shift  26
                       EQUALTO shift  36
                    NOTEQUALTO shift  35
                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 69

State 77:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
     (68) expr ::= expr AND expr *
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        BITXOR shift  25
                        BITAND shift  26
                       EQUALTO shift  36
                    NOTEQUALTO shift  35
                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 68

State 78:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr
     (76) expr ::= expr BITXOR expr *

                        BITAND shift  26
                       EQUALTO shift  36
                    NOTEQUALTO shift  35
                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 76

State 79:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
     (75) expr ::= expr BITAND expr *
          expr ::= expr * BITXOR expr

                       EQUALTO shift  36
                    NOTEQUALTO shift  35
                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 75

State 80:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
     (63) expr ::= expr NOTEQUALTO expr *
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 63

State 81:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
     (62) expr ::= expr EQUALTO expr *
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                   GREATERTHAN shift  33
                          GORE shift  31
                      LESSTHAN shift  34
                          LORE shift  32
                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 62

State 82:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
     (67) expr ::= expr GORE expr *
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 67

State 83:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
     (66) expr ::= expr LORE expr *
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 66

State 84:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
     (65) expr ::= expr GREATERTHAN expr *
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 65

State 85:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
     (64) expr ::= expr LESSTHAN expr *
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        SHIFTL shift  28
                        SHIFTR shift  27
                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 64

State 86:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
     (74) expr ::= expr SHIFTR expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 74

State 87:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
     (73) expr ::= expr SHIFTL expr *
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                          PLUS shift  42
                         MINUS shift  41
                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 73

State 88:
     (11) name_chain ::= NAME *
     (12) expr ::= NAME *
          function_call ::= NAME * LPAREN stmt_list RPAREN
          function_call ::= NAME * LBRAC RBRAC LPAREN stmt_list RPAREN
          function_call ::= NAME * LPAREN RPAREN
          array_index ::= NAME * LBRAC expr RBRAC

                        ASSIGN reduce 11
                        LPAREN shift  4
                        LPAREN reduce 11  ** Parsing conflict **
                         LBRAC shift  11
                          NAME reduce 11
                         LCURL reduce 11
                     {default} reduce 12

State 89:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
     (57) expr ::= expr MINUS expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 57

State 90:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
     (56) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                        DIVIDE shift  40
                         TIMES shift  39
                        MODULO shift  38
                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 56

State 91:
          guard_statement ::= guard_statement * BITOR expr ASSIGN expr DELIMITER
          final_guard_statement ::= guard_statement * BITOR expr ASSIGN expr RCURL
          final_guard_statement ::= guard_statement * WILDCARD ASSIGN expr RCURL
          assignment ::= guard_statement * BITOR expr ASSIGN expr DELIMITER final_where_statement
          assignment ::= guard_statement * WILDCARD ASSIGN expr DELIMITER final_where_statement

                         BITOR shift  15
                      WILDCARD shift  103

State 92:
          function_call ::= array_index * LPAREN RPAREN
          array_index ::= array_index * LBRAC expr RBRAC

                        LPAREN shift  111
                         LBRAC shift  21

State 93:
     (14) expr ::= expr COMPOSITION NAME *
          function_call ::= NAME * LPAREN stmt_list RPAREN
          function_call ::= NAME * LBRAC RBRAC LPAREN stmt_list RPAREN
          function_call ::= NAME * LPAREN RPAREN
          array_index ::= NAME * LBRAC expr RBRAC

                        LPAREN shift  4
                         LBRAC shift  11
                     {default} reduce 14

State 94:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
     (72) expr ::= NOT expr *
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 72

State 95:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
     (70) expr ::= BITNOT expr *
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 70

State 96:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
     (61) expr ::= expr POW expr *
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 61

State 97:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
     (60) expr ::= expr MODULO expr *
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 60

State 98:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * TIMES expr
     (59) expr ::= expr TIMES expr *
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 59

State 99:
          expr ::= expr * COMPOSITION function_call
          expr ::= expr * COMPOSITION NAME
          expr ::= expr * PREPEND expr
          expr ::= expr * APPEND expr
          expr ::= expr * PLUSPLUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * DIVIDE expr
     (58) expr ::= expr DIVIDE expr *
          expr ::= expr * TIMES expr
          expr ::= expr * MODULO expr
          expr ::= expr * POW expr
          expr ::= expr * EQUALTO expr
          expr ::= expr * NOTEQUALTO expr
          expr ::= expr * LESSTHAN expr
          expr ::= expr * GREATERTHAN expr
          expr ::= expr * LORE expr
          expr ::= expr * GORE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * SHIFTL expr
          expr ::= expr * SHIFTR expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITXOR expr

                           POW shift  37
                      PLUSPLUS shift  43
                     {default} reduce 58

State 100:
          expr ::= array_index * LPAREN stmt_list RPAREN
          function_call ::= array_index * LPAREN RPAREN
          array_index ::= array_index * LBRAC expr RBRAC
     (80) expr ::= array_index *

                        LPAREN shift  3
                         LBRAC shift  21
                     {default} reduce 80

State 101:
     (12) expr ::= NAME *
          function_call ::= NAME * LPAREN stmt_list RPAREN
          function_call ::= NAME * LBRAC RBRAC LPAREN stmt_list RPAREN
          function_call ::= NAME * LPAREN RPAREN
          array_index ::= NAME * LBRAC expr RBRAC

                        LPAREN shift  4
                        LPAREN reduce 12  ** Parsing conflict **
                         LBRAC shift  11
                         LBRAC reduce 12  ** Parsing conflict **
                     {default} reduce 12

State 102:
          test ::= LET * IN

                            IN shift  121

State 103:
          final_guard_statement ::= guard_statement WILDCARD * ASSIGN expr RCURL
          assignment ::= guard_statement WILDCARD * ASSIGN expr DELIMITER final_where_statement

                        ASSIGN shift  13

State 104:
          final_where_statement ::= where_statement name_chain ASSIGN expr RCURL DELIMITER * RCURL

                         RCURL shift  130

State 105:
          final_where_statement ::= where_statement name_chain ASSIGN expr RCURL * DELIMITER RCURL

                     DELIMITER shift  104

State 106:
          pattern_argument ::= LPAREN NAME COLON NAME * RPAREN

                        RPAREN shift  134

State 107:
          pattern_argument ::= LPAREN NAME COLON * NAME RPAREN

                          NAME shift  106

State 108:
          pattern_argument ::= LPAREN NAME * COLON NAME RPAREN

                         COLON shift  107

State 109:
          pattern_argument ::= LPAREN * NAME COLON NAME RPAREN

                          NAME shift  108

State 110:
          guard_statement ::= name_chain LCURL * BITOR expr ASSIGN expr DELIMITER

                         BITOR shift  20

State 111:
          function_call ::= array_index LPAREN * RPAREN

                        RPAREN shift  144

State 112:
          function_call ::= NAME LBRAC RBRAC * LPAREN stmt_list RPAREN

                        LPAREN shift  5

State 113:
          array ::= LBRAC maybe_empty_stmt_list * RBRAC

                         RBRAC shift  145

State 114:
          expr ::= PRINT * LPAREN expr RPAREN

                        LPAREN shift  46

State 115:
     (20) expr ::= function_call *
          array_index ::= function_call * LBRAC expr RBRAC

                         LBRAC shift  47
                         LBRAC reduce 20  ** Parsing conflict **
                     {default} reduce 20

State 116:
     (13) expr ::= expr COMPOSITION function_call *
          array_index ::= function_call * LBRAC expr RBRAC

                         LBRAC shift  47
                     {default} reduce 13

State 117:
          in ::= in test * DELIMITER

                     DELIMITER shift  164

State 118:
          in ::= in start * DELIMITER

                     DELIMITER shift  165

State 119:
     (82) error ::= OPENQUOTEERROR *

                     {default} reduce 82

State 120:
     (81) in ::= error *

                     {default} reduce 81

State 121:
     (34) test ::= LET IN *

                     {default} reduce 34

State 122:
     (26) assignment ::= final_guard_statement *

                     {default} reduce 26

State 123:
     (28) assignment ::= guard_statement WILDCARD ASSIGN expr DELIMITER final_where_statement *

                     {default} reduce 28

State 124:
     (25) final_guard_statement ::= guard_statement WILDCARD ASSIGN expr RCURL *

                     {default} reduce 25

State 125:
     (24) final_guard_statement ::= guard_statement BITOR expr ASSIGN expr RCURL *

                     {default} reduce 24

State 126:
     (27) assignment ::= guard_statement BITOR expr ASSIGN expr DELIMITER final_where_statement *

                     {default} reduce 27

State 127:
     (21) test ::= case_statement *

                     {default} reduce 21

State 128:
     (33) case_statement ::= name_chain ASSIGN CASE expr OF *

                     {default} reduce 33

State 129:
     (36) assignment ::= name_chain ASSIGN expr LCURL final_where_statement *

                     {default} reduce 36

State 130:
     (32) final_where_statement ::= where_statement name_chain ASSIGN expr RCURL DELIMITER RCURL *

                     {default} reduce 32

State 131:
     (31) where_statement ::= where_statement name_chain ASSIGN expr DELIMITER *

                     {default} reduce 31

State 132:
     (29) where_statement ::= WHERE LCURL *

                     {default} reduce 29

State 133:
     (11) name_chain ::= NAME *

                     {default} reduce 11

State 134:
     (52) pattern_argument ::= LPAREN NAME COLON NAME RPAREN *

                     {default} reduce 52

State 135:
     (51) name_chain ::= name_chain pattern_argument *

                     {default} reduce 51

State 136:
     (30) where_statement ::= WHERE name_chain ASSIGN expr LCURL *

                     {default} reduce 30

State 137:
     (22) guard_statement ::= name_chain LCURL BITOR expr ASSIGN expr DELIMITER *

                     {default} reduce 22

State 138:
     (10) name_chain ::= name_chain NAME *

                     {default} reduce 10

State 139:
     (77) array_index ::= function_call LBRAC expr RBRAC *

                     {default} reduce 77

State 140:
     (16) function_call ::= NAME LBRAC RBRAC LPAREN stmt_list RPAREN *

                     {default} reduce 16

State 141:
     (78) array_index ::= NAME LBRAC expr RBRAC *

                     {default} reduce 78

State 142:
     (18) function_call ::= NAME LPAREN RPAREN *

                     {default} reduce 18

State 143:
     (79) array_index ::= array_index LBRAC expr RBRAC *

                     {default} reduce 79

State 144:
     (19) function_call ::= array_index LPAREN RPAREN *

                     {default} reduce 19

State 145:
     (40) array ::= LBRAC maybe_empty_stmt_list RBRAC *

                     {default} reduce 40

State 146:
     (71) expr ::= LPAREN MINUS expr RPAREN *

                     {default} reduce 71

State 147:
     (50) bool ::= BOOLEAN *

                     {default} reduce 50

State 148:
     (49) string ::= STRING *

                     {default} reduce 49

State 149:
     (48) num ::= NUM *

                     {default} reduce 48

State 150:
     (47) expr ::= LPAREN expr RPAREN *

                     {default} reduce 47

State 151:
     (46) expr ::= PRINT LPAREN expr RPAREN *

                     {default} reduce 46

State 152:
     (45) expr ::= bool *

                     {default} reduce 45

State 153:
     (44) expr ::= string *

                     {default} reduce 44

State 154:
     (43) expr ::= num *

                     {default} reduce 43

State 155:
     (37) stmt_list ::= stmt *

                     {default} reduce 37

State 156:
     (39) expr ::= array *

                     {default} reduce 39

State 157:
     (38) stmt_list ::= stmt_list stmt *

                     {default} reduce 38

State 158:
     (17) expr ::= array_index LPAREN stmt_list RPAREN *

                     {default} reduce 17

State 159:
     (15) function_call ::= NAME LPAREN stmt_list RPAREN *

                     {default} reduce 15

State 160:
      (8) top_stmt ::= stmt *

                     {default} reduce 8

State 161:
      (7) spec ::= top_stmt *

                     {default} reduce 7

State 162:
      (6) spec ::= assignment *

                     {default} reduce 6

State 163:
      (5) start ::= spec *

                     {default} reduce 5

State 164:
      (4) in ::= in test DELIMITER *

                     {default} reduce 4

State 165:
      (3) in ::= in start DELIMITER *

                     {default} reduce 3

State 166:
      (2) in ::= in DELIMITER *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: ASSIGN
    2: BITOR
    3: FUNCTION_DEC
    4: COMPOSITION
    5: FUNCTION_CALL
    6: PREPEND
    7: APPEND
    8: INDEX
    9: OR
   10: AND
   11: BITXOR
   12: BITAND
   13: EQUALTO
   14: NOTEQUALTO
   15: GREATERTHAN
   16: GORE
   17: LESSTHAN
   18: LORE
   19: SHIFTL
   20: SHIFTR
   21: PLUS
   22: MINUS
   23: DIVIDE
   24: TIMES
   25: MODULO
   26: POW
   27: NOT
   28: BITNOT
   29: UMINUS
   30: PLUSPLUS
   31: LPAREN
   32: RPAREN
   33: LBRAC
   34: RBRAC
   35: COMMA
   36: COLLECTARRAY
   37: DELIMITER
   38: NAME
   39: COLON
   40: LCURL
   41: RCURL
   42: WILDCARD
   43: WHERE
   44: CASE
   45: OF
   46: LET
   47: IN
   48: PRINT
   49: NUM
   50: STRING
   51: BOOLEAN
   52: OPENQUOTEERROR
   53: error: OPENQUOTEERROR
   54: expr: NOT BITNOT LPAREN LBRAC NAME PRINT NUM STRING BOOLEAN
   55: id:
   56: main: <lambda> NOT BITNOT LPAREN LBRAC DELIMITER NAME LET PRINT NUM STRING BOOLEAN OPENQUOTEERROR
   57: in: <lambda> NOT BITNOT LPAREN LBRAC DELIMITER NAME LET PRINT NUM STRING BOOLEAN OPENQUOTEERROR
   58: start: NOT BITNOT LPAREN LBRAC NAME PRINT NUM STRING BOOLEAN
   59: test: NAME LET
   60: spec: NOT BITNOT LPAREN LBRAC NAME PRINT NUM STRING BOOLEAN
   61: assignment: NAME
   62: top_stmt: NOT BITNOT LPAREN LBRAC NAME PRINT NUM STRING BOOLEAN
   63: stmt: NOT BITNOT LPAREN LBRAC NAME PRINT NUM STRING BOOLEAN
   64: name_chain: NAME
   65: function_call: NAME
   66: stmt_list: NOT BITNOT LPAREN LBRAC NAME PRINT NUM STRING BOOLEAN
   67: array_index: NAME
   68: case_statement: NAME
   69: guard_statement: NAME
   70: final_guard_statement: NAME
   71: final_where_statement: WHERE
   72: where_statement: WHERE
   73: array: LBRAC
   74: maybe_empty_stmt_list: <lambda> NOT BITNOT LPAREN LBRAC NAME PRINT NUM STRING BOOLEAN
   75: num: NUM
   76: string: STRING
   77: bool: BOOLEAN
   78: pattern_argument: LPAREN
