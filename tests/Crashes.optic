//////////////////////
// Panopticon Crashes
//////////////////////

//gc tests:

//Doing this repeatedly Works
f x = x + 1
f(1)
f("hey")
f( f( [ 2 3 ] ) )


//Fixed: Syntax Error.
0:1:2:3:4:
//Should Throw Syntax Error, doesn't:
++0++1++2++3++4

//These all correctly throw syntax errors.
rt_someFunc()
rt|someFunc()
rt/someFunc()
rt~someFunc()
rt#someFunc()
rt,someFunc()
rt\someFunc()
rt&someFunc()
rr<>someFunc()
rt#someFunc( 1 2 3 )
rt~someOtherFunc( 1 2 3)
<rt>someFunc(1 2 3)
[rt]someFunc( 1 2 3)
(rt someFunc( 1 2 3 ))
{rt someFunc( 1 2 3 )}

//Should throw syntax error, doesn't.
|rt someFunc( 1 2 3 )|
// Crashes


// Bugs
//This Error Has been fixed....
1. Guards aren't multi-channel expanding.

//...However now Recursion is crashing:
crossTheStreams x
	| x < 100 && x > 0	= crossTheStreams(x + 2) - 1 >> crossTheStreams
	| _					= x * 2

crossTheStreams(1)
crossTheStreams(34)
crossTheStreams([91 91])

recursionTest x
	| x > 0 	= x + recursionTest(x - 1)
	| _			= 0

recursionTest(10)

fallthroughTest x
	| x > 5	= "Fallthrough > 5:" + x
	| x > 4	= "Fallthrough > 4:" + x
	| x > 3	= "Fallthrough > 3:" + x
	| x > 2	= "Fallthrough > 2:" + x
	| x > 1	= "Fallthrough > 1:" + x
	| x > 0	= "Fallthrough > 0:" + x
	| _		= 2+2

fallthroughTest(0)

2. Double uninitialized variables crash

example (execute together):
n * m + y n * m + y
n + y y
z + z n

//Fixed
Fixed too much printing
Function array access 
example: 
testArray x = [ x x*2 [x x*4] x+1 ]
testArray( 99 )[0]
testArray( 99 )[1]
testArray( 99 )[2]
testArray( 99 )[2][1]
testArray( 99 )[3]