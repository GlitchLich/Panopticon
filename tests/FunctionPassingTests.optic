// Works
1 + ( 1 + 2 )

// Works
( 1 + 2 ) + 2.5

// Works
mul x y = x * y
mul( 2 3 ) + 1

// Doesn't work
mul(
	2
	3
)

// Works
ten = 10
ten()
ten() + 1
1 + ten()
ten() * ten()
mul( ten() ten() )

// Doesn't work
1 + [ ten() ten() ]


// Works
1 + [ 0 1 2 3] + ten()
ten() + [ 0 1 2 3 ] + 1

// Passing functions

//Function calls in Function declarations
binOp op x y = op( x y )
mul x y = x * y
binOp( mul 2 3 )
div x y = x / y
binOp( div 2 3 )

//Arrays in Function Calls
plusOne x = x + 1
//Works
plusOne([0 1 2 3])
//Works
plusOne(plusOne([0 1 2 3]))

//Arrays in Function Declarations
arrayPlusOne x = [2 3]+x
arrayPlusOne(1)
arrayPlusOne([ 3 4 5 6 7 ])
arrayPlusOne( arrayPlusOne([ 0 1 2 3 4 5]) )

//Doesn't Work
combiner x y = [x y]
combiner(12 13)

// Doesn't work
printer x y = print([ x y ])
printer( 2 3 )

//Goes infinite, crashes. Need guards for this to work
plusOne x = x + 1
funcRepeater op x t = funcRepeater(op op(x) t-1)

// maps
myMap< monkey = 4 >
myMap["monkey"] == 4

//Guard version, needs logic:
plusOne x = x + 1
funcRepeater op x t 
	| t > 0 = funcRepeater(op op(x) t-1)
	_		= op(x)
