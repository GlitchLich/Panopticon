//The world as unique value style:
copyFile source ~dest
	| readOK 	= copyFile( source1 FWriteC( c dest ) )
	| _			= dest
	where
		[readOK c source1] = SFReadC( source )

Start *world = newWorld
	where
		[*files *events] = OpenWorld << world
		[sourceOpen source *files1] = SFOpen( “Source” ) << FReadData << files
		[destOpen *dest *files2] = FOpen( “Dest” ) << FWriteData << files1
		*dest1 = copyFile( source dest )
		newWorld = CloseWorld( events ) << CloseFile( dest1 files2 )


initSimulacra( thisWorld )

initSimulacra *world = finalWorld
	where
		[*world2 awesomeSample] 		= bufRead(world "hell yeah")
		[*world3 awesomeSample2] 		= bufRead(world2 "hell yeah2")
		[*world4 awesomeSample3] 		= bufRead(world3 "hell yeah3")
		[*finalWorld awesomeSample4] 	= bufRead(world4 "hell yeah4")

//Mercury style State Variables
initSimulacra :: !IO
initSimulacra !IO = 
	bufs = 
		bufRead("hell yeah" !IO) :
		bufRead("heall yeah2" !IO) :
		bufRead("hell yeah3" !IO) :
		bufRead("hell yeah4" !IO),
	compileSimulacraSynths(bufs).

copyFile source !dest !IO = 
	readFile = read(source !IO),
	case readFile of
		Nothing = !dest
		_		= copyFile(readFile fwrite(!dest !IO) !IO).		

start !IO =
		source = fopen( “Source” !IO),
		!dest = fopen( “Dest” !IO),
		!dest = copyFile( source !dest !IO),
		closeFiles( [source !dest] !IO ).