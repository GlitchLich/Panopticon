// Memory Leak Tests

//===========================
// Total Report:
// No Leaks: 16
// Leaks: 8
// Negative Leaks: 0
// Crashes: 3
//===========================

//Numbers: No Leaks
1
//Booleans: No Leaks
true
//Strings: No Leaks
"test"
//Number Arrays: No Leaks
[ 0 1 2 3 ]
//Mixed Arrays: No Leaks
[ 0 true "test" [ 3*2 2+"hey" ] ]
//Number Math: No Leaks
1 + 1 * 3 / 2 - 1 
//Boolean Math: No Leaks
true + false
//String Math: No Leaks
"Are there" + "Leaks?"
//Array Math: No Leaks
[ 0 1 2 3 ] + [ 0 1 2 3 4 ]
//Declaring Variables: No Leaks
a = [ 0 1 2 3 ]
//Using Variables: No Leaks
a
//Declaring Vanilla Number Functions: No Leaks
f x = x * 2
//Using Vanilla Number Functions: No Leaks
f(2)
f([0 1 2 3])

double x = x * 2
double(2)

array x = [ x x x x x x x ]
array(10)
array([ array("Ten") array(9) ])

hello x = x + " World."
hello("Hello")

//Declaring Vanilla Guards: No Leaks
regularGuard x
	| x > 1	= 1
	|_		= 0
//Using Vanilla Guards: No Leaks
regularGuard(0)
//Declaring String Guards: No Leaks
stringGuard x
       | x == "hey"     = "No"
       | x == "Turtle"	= "Cool"
       |_               = "Yes"
//Using String Guards: No Leaks
stringGuard("hey")
//Declaring Array Guards: No Leaks
arrayGuard x
       | x[0] == 0     	= 10
       | x[0] == 1		= 100
       |_               = 0.1
//Using Array Guards: LEAKS!!!!!!!!!!!!!!
arrayGuard([1])

arrayGuard2 x
       | x == 0     = [ 10  10  ]
       | x == 1		= [ 100 100 ]
       |_           = [ 0.1 0.1 ]

arrayGuard2(0)

//Declaring Where Functions: No Leaks
regularWhere x = x * y
	where 
		y = 20
//Declaring Where Functions: SEGMENTATION FAULT CRASH!!!!!!!!!!!!!!!!!!!!!
regularWhere( 13.3 )
//Declaring String Function: No Leaks
string x = "String " + x
//Using String Functions: No Leaks
string(2)
//Print: No Leaks
print("Hello World")
//Declaring Vanilla Dictionaries: No Leaks
myDict = { test = 1 test2 = true test3 = "hey" test4 = [ 0 1 2 3 ] innerDict = { nested = 4} }
//Using Vanilla Dictionaries: No Leaks
myDict::test
1 + myDict::test
myDict::test == "hey"
myDict::test2
myDict::test3
//This simply doesn't do anything
myDict::test4 + myDict::test
//No Leaks
myDict::innerDict::nested

//Declaring Functions in Dictionaries: No Leaks
functionary = { func x = x + 1 }
functionary = 
	func x = x + 1
//Using Function in Dictionaries: Crash
functionary::func(10)
print(functionary::func)
do x y = x(y)
do(functionary::func 20)

add x y = x + y
splayPlusOne x = [ x x ] + 1
op x y = x(y)
op(splayPlusOne 1)
add( 2 op( splayPlusOne 1 ))


arraytionary = { array x = [ x x x ] }
// crashes
arraytionary::array(10)
arraytionaryPlus x = arraytionary::array(x) + x
arraytionaryPlus(1)

call x y = x (y)
call(arrationary::array 10)

funcFunc f = f + f
a = 20 + 1
funcFunc(a a)

//Array Functors: CRASH!!!!
doubler x = x * 2
zeroOut x = x * 0
doubleNeg x = x * (-2)
spreader = [doubler zeroOut doubleNeg]
spreader[0](1)
spreader[](0)
spreader[](2)
